(function() {
    var type_impls = Object.fromEntries([["core_foundation",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromMutVoid-for-*const+c_void\" class=\"impl\"><a class=\"src rightside\" href=\"src/core_foundation/base.rs.html#319-323\">Source</a><a href=\"#impl-FromMutVoid-for-*const+c_void\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"core_foundation/base/trait.FromMutVoid.html\" title=\"trait core_foundation::base::FromMutVoid\">FromMutVoid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a><a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/os/raw/type.c_void.html\" title=\"type std::os::raw::c_void\">c_void</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_mut_void\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/core_foundation/base.rs.html#320-322\">Source</a><a href=\"#method.from_mut_void\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"core_foundation/base/trait.FromMutVoid.html#tymethod.from_mut_void\" class=\"fn\">from_mut_void</a>&lt;'a&gt;(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/os/raw/type.c_void.html\" title=\"type std::os::raw::c_void\">c_void</a>) -&gt; <a class=\"struct\" href=\"core_foundation/base/struct.ItemMutRef.html\" title=\"struct core_foundation::base::ItemMutRef\">ItemMutRef</a>&lt;'a, Self&gt;</h4></section></div></details>","FromMutVoid","core_foundation::base::CFAllocatorRef","core_foundation::base::CFNullRef","core_foundation::base::CFTypeRef","core_foundation::propertylist::CFPropertyListRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromVoid-for-*const+c_void\" class=\"impl\"><a class=\"src rightside\" href=\"src/core_foundation/base.rs.html#349-353\">Source</a><a href=\"#impl-FromVoid-for-*const+c_void\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"core_foundation/base/trait.FromVoid.html\" title=\"trait core_foundation::base::FromVoid\">FromVoid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a><a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/os/raw/type.c_void.html\" title=\"type std::os::raw::c_void\">c_void</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_void\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/core_foundation/base.rs.html#350-352\">Source</a><a href=\"#method.from_void\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"core_foundation/base/trait.FromVoid.html#tymethod.from_void\" class=\"fn\">from_void</a>&lt;'a&gt;(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a><a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/os/raw/type.c_void.html\" title=\"type std::os::raw::c_void\">c_void</a>) -&gt; <a class=\"struct\" href=\"core_foundation/base/struct.ItemRef.html\" title=\"struct core_foundation::base::ItemRef\">ItemRef</a>&lt;'a, Self&gt;</h4></section></div></details>","FromVoid","core_foundation::base::CFAllocatorRef","core_foundation::base::CFNullRef","core_foundation::base::CFTypeRef","core_foundation::propertylist::CFPropertyListRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TCFTypeRef-for-*const+T\" class=\"impl\"><a class=\"src rightside\" href=\"src/core_foundation_sys/base.rs.html#112\">Source</a><a href=\"#impl-TCFTypeRef-for-*const+T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"core_foundation/base/trait.TCFTypeRef.html\" title=\"trait core_foundation::base::TCFTypeRef\">TCFTypeRef</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.as_void_ptr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/core_foundation_sys/base.rs.html#113\">Source</a><a href=\"#method.as_void_ptr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"core_foundation/base/trait.TCFTypeRef.html#tymethod.as_void_ptr\" class=\"fn\">as_void_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a></h4></section><section id=\"method.from_void_ptr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/core_foundation_sys/base.rs.html#117\">Source</a><a href=\"#method.from_void_ptr\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"core_foundation/base/trait.TCFTypeRef.html#tymethod.from_void_ptr\" class=\"fn\">from_void_ptr</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a></h4></section></div></details>","TCFTypeRef","core_foundation::array::CFArrayRef","core_foundation::attributed_string::CFAttributedStringRef","core_foundation::base::CFAllocatorRef","core_foundation::base::CFNullRef","core_foundation::base::CFTypeRef","core_foundation::base::ConstStr255Param","core_foundation::base::ConstStringPtr","core_foundation::boolean::CFBooleanRef","core_foundation::characterset::CFCharacterSetRef","core_foundation::data::CFDataRef","core_foundation::date::CFDateRef","core_foundation::dictionary::CFDictionaryRef","core_foundation::error::CFErrorDomain","core_foundation::number::CFNumberRef","core_foundation::propertylist::CFPropertyListRef","core_foundation::set::CFSetRef","core_foundation::string::CFStringRef","core_foundation::timezone::CFTimeZoneRef","core_foundation::url::CFURLRef","core_foundation::uuid::CFUUIDRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TCFTypeRef-for-*mut+T\" class=\"impl\"><a class=\"src rightside\" href=\"src/core_foundation_sys/base.rs.html#122\">Source</a><a href=\"#impl-TCFTypeRef-for-*mut+T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"core_foundation/base/trait.TCFTypeRef.html\" title=\"trait core_foundation::base::TCFTypeRef\">TCFTypeRef</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.as_void_ptr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/core_foundation_sys/base.rs.html#123\">Source</a><a href=\"#method.as_void_ptr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"core_foundation/base/trait.TCFTypeRef.html#tymethod.as_void_ptr\" class=\"fn\">as_void_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a></h4></section><section id=\"method.from_void_ptr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/core_foundation_sys/base.rs.html#127\">Source</a><a href=\"#method.from_void_ptr\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"core_foundation/base/trait.TCFTypeRef.html#tymethod.from_void_ptr\" class=\"fn\">from_void_ptr</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a></h4></section></div></details>","TCFTypeRef","core_foundation::array::CFMutableArrayRef","core_foundation::attributed_string::CFMutableAttributedStringRef","core_foundation::base::StringPtr","core_foundation::bundle::CFBundleRef","core_foundation::bundle::CFPlugInRef","core_foundation::characterset::CFMutableCharacterSetRef","core_foundation::data::CFMutableDataRef","core_foundation::dictionary::CFMutableDictionaryRef","core_foundation::error::CFErrorRef","core_foundation::filedescriptor::CFFileDescriptorRef","core_foundation::mach_port::CFMachPortRef","core_foundation::runloop::CFRunLoopRef","core_foundation::runloop::CFRunLoopSourceRef","core_foundation::runloop::CFRunLoopObserverRef","core_foundation::runloop::CFRunLoopTimerRef","core_foundation::set::CFMutableSetRef","core_foundation::string::CFMutableStringRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToVoid%3C*const+c_void%3E-for-*const+c_void\" class=\"impl\"><a class=\"src rightside\" href=\"src/core_foundation/base.rs.html#369-373\">Source</a><a href=\"#impl-ToVoid%3C*const+c_void%3E-for-*const+c_void\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"core_foundation/base/trait.ToVoid.html\" title=\"trait core_foundation::base::ToVoid\">ToVoid</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a><a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/os/raw/type.c_void.html\" title=\"type std::os::raw::c_void\">c_void</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.to_void\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/core_foundation/base.rs.html#370-372\">Source</a><a href=\"#method.to_void\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"core_foundation/base/trait.ToVoid.html#tymethod.to_void\" class=\"fn\">to_void</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a><a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/os/raw/type.c_void.html\" title=\"type std::os::raw::c_void\">c_void</a></h4></section></div></details>","ToVoid<*const c_void>","core_foundation::base::CFAllocatorRef","core_foundation::base::CFNullRef","core_foundation::base::CFTypeRef","core_foundation::propertylist::CFPropertyListRef"]]],["core_foundation_sys",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TCFTypeRef-for-*const+T\" class=\"impl\"><a class=\"src rightside\" href=\"src/core_foundation_sys/base.rs.html#112-120\">Source</a><a href=\"#impl-TCFTypeRef-for-*const+T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"core_foundation_sys/base/trait.TCFTypeRef.html\" title=\"trait core_foundation_sys::base::TCFTypeRef\">TCFTypeRef</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const T</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.as_void_ptr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/core_foundation_sys/base.rs.html#113-115\">Source</a><a href=\"#method.as_void_ptr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"core_foundation_sys/base/trait.TCFTypeRef.html#tymethod.as_void_ptr\" class=\"fn\">as_void_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a><a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/os/raw/type.c_void.html\" title=\"type std::os::raw::c_void\">c_void</a></h4></section><section id=\"method.from_void_ptr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/core_foundation_sys/base.rs.html#117-119\">Source</a><a href=\"#method.from_void_ptr\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"core_foundation_sys/base/trait.TCFTypeRef.html#tymethod.from_void_ptr\" class=\"fn\">from_void_ptr</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a><a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/os/raw/type.c_void.html\" title=\"type std::os::raw::c_void\">c_void</a>) -&gt; Self</h4></section></div></details>","TCFTypeRef","core_foundation_sys::array::CFArrayRef","core_foundation_sys::attributed_string::CFAttributedStringRef","core_foundation_sys::bag::CFBagRef","core_foundation_sys::base::CFAllocatorRef","core_foundation_sys::base::CFNullRef","core_foundation_sys::base::CFTypeRef","core_foundation_sys::base::ConstStr255Param","core_foundation_sys::base::ConstStringPtr","core_foundation_sys::bit_vector::CFBitVectorRef","core_foundation_sys::characterset::CFCharacterSetRef","core_foundation_sys::data::CFDataRef","core_foundation_sys::date::CFDateRef","core_foundation_sys::dictionary::CFDictionaryRef","core_foundation_sys::locale::CFLocaleRef","core_foundation_sys::number::CFBooleanRef","core_foundation_sys::number::CFNumberRef","core_foundation_sys::set::CFSetRef","core_foundation_sys::string::CFStringRef","core_foundation_sys::timezone::CFTimeZoneRef","core_foundation_sys::url::CFURLRef","core_foundation_sys::uuid::CFUUIDRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TCFTypeRef-for-*mut+T\" class=\"impl\"><a class=\"src rightside\" href=\"src/core_foundation_sys/base.rs.html#122-130\">Source</a><a href=\"#impl-TCFTypeRef-for-*mut+T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"core_foundation_sys/base/trait.TCFTypeRef.html\" title=\"trait core_foundation_sys::base::TCFTypeRef\">TCFTypeRef</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.as_void_ptr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/core_foundation_sys/base.rs.html#123-125\">Source</a><a href=\"#method.as_void_ptr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"core_foundation_sys/base/trait.TCFTypeRef.html#tymethod.as_void_ptr\" class=\"fn\">as_void_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a><a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/os/raw/type.c_void.html\" title=\"type std::os::raw::c_void\">c_void</a></h4></section><section id=\"method.from_void_ptr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/core_foundation_sys/base.rs.html#127-129\">Source</a><a href=\"#method.from_void_ptr\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"core_foundation_sys/base/trait.TCFTypeRef.html#tymethod.from_void_ptr\" class=\"fn\">from_void_ptr</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a><a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/os/raw/type.c_void.html\" title=\"type std::os::raw::c_void\">c_void</a>) -&gt; Self</h4></section></div></details>","TCFTypeRef","core_foundation_sys::array::CFMutableArrayRef","core_foundation_sys::attributed_string::CFMutableAttributedStringRef","core_foundation_sys::bag::CFMutableBagRef","core_foundation_sys::base::StringPtr","core_foundation_sys::binary_heap::CFBinaryHeapRef","core_foundation_sys::bit_vector::CFMutableBitVectorRef","core_foundation_sys::bundle::CFBundleRef","core_foundation_sys::bundle::CFPlugInRef","core_foundation_sys::calendar::CFCalendarRef","core_foundation_sys::characterset::CFMutableCharacterSetRef","core_foundation_sys::data::CFMutableDataRef","core_foundation_sys::date_formatter::CFDateFormatterRef","core_foundation_sys::dictionary::CFMutableDictionaryRef","core_foundation_sys::error::CFErrorRef","core_foundation_sys::file_security::CFFileSecurityRef","core_foundation_sys::filedescriptor::CFFileDescriptorRef","core_foundation_sys::mach_port::CFMachPortRef","core_foundation_sys::messageport::CFMessagePortRef","core_foundation_sys::notification_center::CFNotificationCenterRef","core_foundation_sys::number_formatter::CFNumberFormatterRef","core_foundation_sys::plugin::CFPlugInInstanceRef","core_foundation_sys::runloop::CFRunLoopRef","core_foundation_sys::runloop::CFRunLoopSourceRef","core_foundation_sys::runloop::CFRunLoopObserverRef","core_foundation_sys::runloop::CFRunLoopTimerRef","core_foundation_sys::set::CFMutableSetRef","core_foundation_sys::socket::CFSocketRef","core_foundation_sys::stream::CFReadStreamRef","core_foundation_sys::stream::CFWriteStreamRef","core_foundation_sys::string::CFMutableStringRef","core_foundation_sys::string_tokenizer::CFStringTokenizerRef","core_foundation_sys::tree::CFTreeRef","core_foundation_sys::url_enumerator::CFURLEnumeratorRef"]]],["dispatch2",[]],["objc2",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-*mut+T\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/mod.rs.html#2858\">Source</a></span><a href=\"#impl-Debug-for-*mut+T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a><div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/mod.rs.html#2859\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","objc2::ffi::id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-*mut+T\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.88.0\">1.88.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ptr/mut_ptr.rs.html#2061\">Source</a></span><a href=\"#impl-Default-for-*mut+T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a><div class=\"where\">where\n    T: <a class=\"traitalias\" href=\"https://doc.rust-lang.org/nightly/core/ptr/metadata/traitalias.Thin.html\" title=\"traitalias core::ptr::metadata::Thin\">Thin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ptr/mut_ptr.rs.html#2063\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a></h4></section></summary><div class=\"docblock\"><p>Returns the default value of <a href=\"https://doc.rust-lang.org/nightly/core/ptr/fn.null_mut.html\" title=\"fn core::ptr::null_mut\"><code>null_mut()</code></a>.</p>\n</div></details></div></details>","Default","objc2::ffi::id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-*mut+T\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2/encode.rs.html#804-808\">Source</a><a href=\"#impl-Encode-for-*mut+T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"objc2/encode/trait.RefEncode.html\" title=\"trait objc2::encode::RefEncode\">RefEncode</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"objc2/encode/trait.Encode.html\" title=\"trait objc2::encode::Encode\">Encode</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ENCODING\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/objc2/encode.rs.html#804-808\">Source</a><a href=\"#associatedconstant.ENCODING\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"objc2/encode/trait.Encode.html#associatedconstant.ENCODING\" class=\"constant\">ENCODING</a>: <a class=\"enum\" href=\"objc2/encode/enum.Encoding.html\" title=\"enum objc2::encode::Encoding\">Encoding</a> = T::ENCODING_REF</h4></section></summary><div class='docblock'>The Objective-C type-encoding for this type.</div></details></div></details>","Encode","objc2::ffi::id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-*mut+T\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#965\">Source</a></span><a href=\"#impl-Hash-for-*mut+T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a><div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#967\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","objc2::ffi::id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MessageReceiver-for-*mut+T\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2/runtime/message_receiver.rs.html#495-502\">Source</a><a href=\"#impl-MessageReceiver-for-*mut+T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"objc2/trait.Message.html\" title=\"trait objc2::Message\">Message</a>&gt; <a class=\"trait\" href=\"objc2/runtime/trait.MessageReceiver.html\" title=\"trait objc2::runtime::MessageReceiver\">MessageReceiver</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_message\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/objc2/runtime/message_receiver.rs.html#422-433\">Source</a><a href=\"#method.send_message\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"objc2/runtime/trait.MessageReceiver.html#method.send_message\" class=\"fn\">send_message</a>&lt;A: <a class=\"trait\" href=\"objc2/encode/trait.EncodeArguments.html\" title=\"trait objc2::encode::EncodeArguments\">EncodeArguments</a>, R: <a class=\"trait\" href=\"objc2/encode/trait.EncodeReturn.html\" title=\"trait objc2::encode::EncodeReturn\">EncodeReturn</a>&gt;(\n    self,\n    sel: <a class=\"struct\" href=\"objc2/runtime/struct.Sel.html\" title=\"struct objc2::runtime::Sel\">Sel</a>,\n    args: A,\n) -&gt; R</h4></section></summary><div class='docblock'>Sends a message to the receiver with the given selector and arguments. <a href=\"objc2/runtime/trait.MessageReceiver.html#method.send_message\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_super_message\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/objc2/runtime/message_receiver.rs.html#459-478\">Source</a><a href=\"#method.send_super_message\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"objc2/runtime/trait.MessageReceiver.html#method.send_super_message\" class=\"fn\">send_super_message</a>&lt;A: <a class=\"trait\" href=\"objc2/encode/trait.EncodeArguments.html\" title=\"trait objc2::encode::EncodeArguments\">EncodeArguments</a>, R: <a class=\"trait\" href=\"objc2/encode/trait.EncodeReturn.html\" title=\"trait objc2::encode::EncodeReturn\">EncodeReturn</a>&gt;(\n    self,\n    superclass: &amp;<a class=\"struct\" href=\"objc2/runtime/struct.AnyClass.html\" title=\"struct objc2::runtime::AnyClass\">AnyClass</a>,\n    sel: <a class=\"struct\" href=\"objc2/runtime/struct.Sel.html\" title=\"struct objc2::runtime::Sel\">Sel</a>,\n    args: A,\n) -&gt; R</h4></section></summary><div class='docblock'>Sends a message to a specific superclass with the given selector and\narguments. <a href=\"objc2/runtime/trait.MessageReceiver.html#method.send_super_message\">Read more</a></div></details></div></details>","MessageReceiver","objc2::ffi::id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-*mut+T\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ptr/mut_ptr.rs.html#1998\">Source</a></span><a href=\"#impl-PartialEq-for-*mut+T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a><div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3><div class=\"docblock\"><p>Pointer equality is by address, as produced by the <a href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html#method.addr\" title=\"method pointer::addr\"><code>&lt;*mut T&gt;::addr</code></a> method.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ptr/mut_ptr.rs.html#2001\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","objc2::ffi::id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pointer-for-*mut+T\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/mod.rs.html#2829\">Source</a></span><a href=\"#impl-Pointer-for-*mut+T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a><div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/mod.rs.html#2830\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Pointer.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Pointer.html#tymethod.fmt\">Read more</a></div></details></div></details>","Pointer","objc2::ffi::id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RefEncode-for-*mut+T\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2/encode.rs.html#814-818\">Source</a><a href=\"#impl-RefEncode-for-*mut+T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"objc2/encode/trait.RefEncode.html\" title=\"trait objc2::encode::RefEncode\">RefEncode</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"objc2/encode/trait.RefEncode.html\" title=\"trait objc2::encode::RefEncode\">RefEncode</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ENCODING_REF\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/objc2/encode.rs.html#814-818\">Source</a><a href=\"#associatedconstant.ENCODING_REF\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"objc2/encode/trait.RefEncode.html#associatedconstant.ENCODING_REF\" class=\"constant\">ENCODING_REF</a>: <a class=\"enum\" href=\"objc2/encode/enum.Encoding.html\" title=\"enum objc2::encode::Encoding\">Encoding</a></h4></section></summary><div class='docblock'>The Objective-C type-encoding for a reference of this type. <a href=\"objc2/encode/trait.RefEncode.html#associatedconstant.ENCODING_REF\">Read more</a></div></details></div></details>","RefEncode","objc2::ffi::id"],["<section id=\"impl-Eq-for-*mut+T\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ptr/mut_ptr.rs.html#2008\">Source</a></span><a href=\"#impl-Eq-for-*mut+T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a><div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3><div class=\"docblock\"><p>Pointer equality is an equivalence relation.</p>\n</div></section>","Eq","objc2::ffi::id"],["<section id=\"impl-UnwindSafe-for-*mut+T\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.9.0\">1.9.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/panic/unwind_safe.rs.html#187\">Source</a></span><a href=\"#impl-UnwindSafe-for-*mut+T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","UnwindSafe","objc2::ffi::id"]]],["objc2_core_foundation",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-*mut+T\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/mod.rs.html#2858\">Source</a></span><a href=\"#impl-Debug-for-*mut+T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a><div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/mod.rs.html#2859\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","objc2_core_foundation::generated::__CFPlugInCOM::LPVOID"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-*mut+T\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#965\">Source</a></span><a href=\"#impl-Hash-for-*mut+T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a><div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#967\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","objc2_core_foundation::generated::__CFPlugInCOM::LPVOID"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-*mut+T\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ptr/mut_ptr.rs.html#1998\">Source</a></span><a href=\"#impl-PartialEq-for-*mut+T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a><div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3><div class=\"docblock\"><p>Pointer equality is by address, as produced by the <a href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html#method.addr\" title=\"method pointer::addr\"><code>&lt;*mut T&gt;::addr</code></a> method.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ptr/mut_ptr.rs.html#2001\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","objc2_core_foundation::generated::__CFPlugInCOM::LPVOID"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pointer-for-*mut+T\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/mod.rs.html#2829\">Source</a></span><a href=\"#impl-Pointer-for-*mut+T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a><div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/mod.rs.html#2830\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Pointer.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Pointer.html#tymethod.fmt\">Read more</a></div></details></div></details>","Pointer","objc2_core_foundation::generated::__CFPlugInCOM::LPVOID"],["<section id=\"impl-Eq-for-*mut+T\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ptr/mut_ptr.rs.html#2008\">Source</a></span><a href=\"#impl-Eq-for-*mut+T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut T</a><div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3><div class=\"docblock\"><p>Pointer equality is an equivalence relation.</p>\n</div></section>","Eq","objc2_core_foundation::generated::__CFPlugInCOM::LPVOID"]]],["objc2_foundation",[]],["objc2_ui_kit",[]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[10750,6447,17,20731,11632,24,20]}