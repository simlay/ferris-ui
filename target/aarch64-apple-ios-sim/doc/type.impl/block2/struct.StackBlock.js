(function() {
    var type_impls = Object.fromEntries([["block2",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-StackBlock%3C'_,+A,+R,+Closure%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/block2/stack.rs.html#471-480\">Source</a><a href=\"#impl-Clone-for-StackBlock%3C'_,+A,+R,+Closure%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, R, Closure: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"block2/struct.StackBlock.html\" title=\"struct block2::StackBlock\">StackBlock</a>&lt;'_, A, R, Closure&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/block2/stack.rs.html#473-479\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","block2::ConcreteBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-StackBlock%3C'_,+A,+R,+Closure%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/block2/stack.rs.html#506-512\">Source</a><a href=\"#impl-Debug-for-StackBlock%3C'_,+A,+R,+Closure%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, R, Closure&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"block2/struct.StackBlock.html\" title=\"struct block2::StackBlock\">StackBlock</a>&lt;'_, A, R, Closure&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/block2/stack.rs.html#507-511\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","block2::ConcreteBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-StackBlock%3C'f,+A,+R,+Closure%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/block2/stack.rs.html#484-504\">Source</a><a href=\"#impl-Deref-for-StackBlock%3C'f,+A,+R,+Closure%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'f, A, R, Closure&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"block2/struct.StackBlock.html\" title=\"struct block2::StackBlock\">StackBlock</a>&lt;'f, A, R, Closure&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"objc2/encode/trait.EncodeArguments.html\" title=\"trait objc2::encode::EncodeArguments\">EncodeArguments</a>,\n    R: <a class=\"trait\" href=\"objc2/encode/trait.EncodeReturn.html\" title=\"trait objc2::encode::EncodeReturn\">EncodeReturn</a>,\n    Closure: <a class=\"trait\" href=\"block2/trait.IntoBlock.html\" title=\"trait block2::IntoBlock\">IntoBlock</a>&lt;'f, A, R&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/block2/stack.rs.html#490\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = <a class=\"struct\" href=\"block2/struct.Block.html\" title=\"struct block2::Block\">Block</a>&lt;&lt;Closure as <a class=\"trait\" href=\"block2/trait.IntoBlock.html\" title=\"trait block2::IntoBlock\">IntoBlock</a>&lt;'f, A, R&gt;&gt;::<a class=\"associatedtype\" href=\"block2/trait.IntoBlock.html#associatedtype.Dyn\" title=\"type block2::IntoBlock::Dyn\">Dyn</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/block2/stack.rs.html#493-503\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","block2::ConcreteBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RefEncode-for-StackBlock%3C'f,+A,+R,+Closure%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/block2/stack.rs.html#72-79\">Source</a><a href=\"#impl-RefEncode-for-StackBlock%3C'f,+A,+R,+Closure%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'f, A, R, Closure&gt; <a class=\"trait\" href=\"objc2/encode/trait.RefEncode.html\" title=\"trait objc2::encode::RefEncode\">RefEncode</a> for <a class=\"struct\" href=\"block2/struct.StackBlock.html\" title=\"struct block2::StackBlock\">StackBlock</a>&lt;'f, A, R, Closure&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"objc2/encode/trait.EncodeArguments.html\" title=\"trait objc2::encode::EncodeArguments\">EncodeArguments</a>,\n    R: <a class=\"trait\" href=\"objc2/encode/trait.EncodeReturn.html\" title=\"trait objc2::encode::EncodeReturn\">EncodeReturn</a>,\n    Closure: <a class=\"trait\" href=\"block2/trait.IntoBlock.html\" title=\"trait block2::IntoBlock\">IntoBlock</a>&lt;'f, A, R&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ENCODING_REF\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/block2/stack.rs.html#78\">Source</a><a href=\"#associatedconstant.ENCODING_REF\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"objc2/encode/trait.RefEncode.html#associatedconstant.ENCODING_REF\" class=\"constant\">ENCODING_REF</a>: <a class=\"enum\" href=\"objc2_encode/encoding/enum.Encoding.html\" title=\"enum objc2_encode::encoding::Encoding\">Encoding</a> = Encoding::Block</h4></section></summary><div class='docblock'>The Objective-C type-encoding for a reference of this type. <a href=\"objc2/encode/trait.RefEncode.html#associatedconstant.ENCODING_REF\">Read more</a></div></details></div></details>","RefEncode","block2::ConcreteBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StackBlock%3C'f,+A,+R,+Closure%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/block2/stack.rs.html#155-315\">Source</a><a href=\"#impl-StackBlock%3C'f,+A,+R,+Closure%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'f, A, R, Closure&gt; <a class=\"struct\" href=\"block2/struct.StackBlock.html\" title=\"struct block2::StackBlock\">StackBlock</a>&lt;'f, A, R, Closure&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"objc2/encode/trait.EncodeArguments.html\" title=\"trait objc2::encode::EncodeArguments\">EncodeArguments</a>,\n    R: <a class=\"trait\" href=\"objc2/encode/trait.EncodeReturn.html\" title=\"trait objc2::encode::EncodeReturn\">EncodeReturn</a>,\n    Closure: <a class=\"trait\" href=\"block2/trait.IntoBlock.html\" title=\"trait block2::IntoBlock\">IntoBlock</a>&lt;'f, A, R&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/block2/stack.rs.html#186-188\">Source</a><h4 class=\"code-header\">pub fn <a href=\"block2/struct.StackBlock.html#tymethod.new\" class=\"fn\">new</a>(closure: Closure) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Construct a <code>StackBlock</code> with the given closure.</p>\n<p>Note that this requires <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\"><code>Clone</code></a>, as a C block is generally assumed\nto be copy-able. If you want to avoid that, put the block directly on\nthe heap using <a href=\"block2/struct.RcBlock.html#method.new\" title=\"associated function block2::RcBlock::new\"><code>RcBlock::new</code></a>.</p>\n<p>When the block is called, it will return the value that results from\ncalling the closure.</p>\n<h6 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h6>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>block2::StackBlock;\n\n<span class=\"kw\">let </span>block = StackBlock::new(|a, b| a + b);\ncheck_addition(<span class=\"kw-2\">&amp;</span>block);</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_encoding\" class=\"method\"><a class=\"src rightside\" href=\"src/block2/stack.rs.html#252-257\">Source</a><h4 class=\"code-header\">pub fn <a href=\"block2/struct.StackBlock.html#tymethod.with_encoding\" class=\"fn\">with_encoding</a>&lt;E&gt;(closure: Closure) -&gt; Self<div class=\"where\">where\n    E: <a class=\"trait\" href=\"block2/trait.ManualBlockEncoding.html\" title=\"trait block2::ManualBlockEncoding\">ManualBlockEncoding</a>&lt;Arguments = A, Return = R&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Constructs a new <a href=\"block2/struct.StackBlock.html\" title=\"struct block2::StackBlock\"><code>StackBlock</code></a> with the given function and encoding\ninformation.</p>\n<p>Some particular newer-ish Apple Objective-C APIs expect the block they\nare given to be created with encoding information set in the block\nobject itself and crash the calling process if they fail to find it,\nwhich renders them pretty much unusable with only <a href=\"block2/struct.StackBlock.html#method.new\" title=\"associated function block2::StackBlock::new\"><code>Self::new</code></a> that\ncurrently does not set such encoding information. This is for example\nthe case in <a href=\"https://developer.apple.com/documentation/fileprovider?language=objc\"><code>FileProvider</code></a> for <a href=\"https://developer.apple.com/documentation/fileprovider/nsfileprovidermanager?language=objc\"><code>NSFileProviderManager</code></a>’s\n<a href=\"https://developer.apple.com/documentation/fileprovider/nsfileprovidermanager/reimportitems(below:completionhandler:)?language=objc\"><code>reimportItemsBelowItemWithIdentifier:completionHandler:</code></a> and\n<a href=\"https://developer.apple.com/documentation/fileprovider/nsfileprovidermanager/waitforstabilization(completionhandler:)?language=objc\"><code>waitForStabilizationWithCompletionHandler:</code></a>, but also in\n<a href=\"https://developer.apple.com/documentation/networkextension?language=objc\"><code>NetworkExtension</code></a> for <a href=\"https://developer.apple.com/documentation/networkextension/nefilterdataprovider?language=objc\"><code>NEFilterDataProvider</code></a>’s\n<a href=\"https://developer.apple.com/documentation/networkextension/nefilterdataprovider/3181998-applysettings?language=objc\"><code>applySettings:completionHandler</code></a>. A complete list of such APIs may\nnot be easily obtained, though.</p>\n<p>This encoding information string could technically be generated at\ncompile time using the generic parameters already available to\n<a href=\"block2/struct.StackBlock.html#method.new\" title=\"associated function block2::StackBlock::new\"><code>Self::new</code></a>. However, doing so would require some constant evaluation\nfeatures that are yet to be implemented and stabilized in the Rust\ncompiler. This function is therefore exposed in the meantime so users\nmay still be able to call the concerned APIs by providing the raw\nencoding information string themselves, thus obtaining a block\ncontaining it and working with these APIs.</p>\n<p>You provide the encoding through the <code>E</code> type parameter, which should\nimplement <a href=\"block2/trait.ManualBlockEncoding.html\" title=\"trait block2::ManualBlockEncoding\"><code>ManualBlockEncoding</code></a>.</p>\n<p>The same requirements as <a href=\"block2/struct.StackBlock.html#method.new\" title=\"associated function block2::StackBlock::new\"><code>Self::new</code></a> apply here as well.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">struct </span>MyBlockEncoding;\n<span class=\"comment\">// SAFETY: The encoding is correct.\n</span><span class=\"kw\">unsafe impl </span>ManualBlockEncoding <span class=\"kw\">for </span>MyBlockEncoding {\n    <span class=\"kw\">type </span>Arguments = (<span class=\"kw-2\">*mut </span>NSError,);\n    <span class=\"kw\">type </span>Return = i32;\n    <span class=\"kw\">const </span>ENCODING_CSTR: <span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'static </span>CStr = <span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_pointer_width = <span class=\"string\">\"64\"</span>) {\n        <span class=\"string\">cr#\"i16@?0@\"NSError\"8\"#\n    </span>} <span class=\"kw\">else </span>{\n        <span class=\"string\">cr#\"i8@?0@\"NSError\"4\"#\n    </span>};\n}\n\n<span class=\"kw\">let </span>my_block = StackBlock::with_encoding::&lt;MyBlockEncoding&gt;(|_err: <span class=\"kw-2\">*mut </span>NSError| {\n    <span class=\"number\">42i32\n</span>});\n<span class=\"macro\">assert_eq!</span>(my_block.call((core::ptr::null_mut(),)), <span class=\"number\">42</span>);</code></pre></div></div></details></div></details>",0,"block2::ConcreteBlock"],["<section id=\"impl-Copy-for-StackBlock%3C'_,+A,+R,+Closure%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/block2/stack.rs.html#482\">Source</a><a href=\"#impl-Copy-for-StackBlock%3C'_,+A,+R,+Closure%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, R, Closure: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"block2/struct.StackBlock.html\" title=\"struct block2::StackBlock\">StackBlock</a>&lt;'_, A, R, Closure&gt;</h3></section>","Copy","block2::ConcreteBlock"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[16700]}