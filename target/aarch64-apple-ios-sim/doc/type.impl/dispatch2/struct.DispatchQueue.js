(function() {
    var type_impls = Object.fromEntries([["dispatch2",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CAnyObject%3E-for-DispatchQueue\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#62-67\">Source</a><a href=\"#impl-AsRef%3CAnyObject%3E-for-DispatchQueue\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"objc2/runtime/struct.AnyObject.html\" title=\"struct objc2::runtime::AnyObject\">AnyObject</a>&gt; for <a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>objc2</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#62-67\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"objc2/runtime/struct.AnyObject.html\" title=\"struct objc2::runtime::AnyObject\">AnyObject</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<AnyObject>","dispatch2::Queue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CDispatchQueue%3E-for-DispatchQueue\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#62-67\">Source</a><a href=\"#impl-AsRef%3CDispatchQueue%3E-for-DispatchQueue\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a>&gt; for <a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#62-67\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;Self</h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<DispatchQueue>","dispatch2::Queue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-DispatchQueue\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#62-67\">Source</a><a href=\"#impl-Debug-for-DispatchQueue\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#62-67\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","dispatch2::Queue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DispatchObject-for-DispatchQueue\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#62-67\">Source</a><a href=\"#impl-DispatchObject-for-DispatchQueue\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dispatch2/trait.DispatchObject.html\" title=\"trait dispatch2::DispatchObject\">DispatchObject</a> for <a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/object.rs.html#68-75\">Source</a><a href=\"#method.retain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dispatch2/trait.DispatchObject.html#method.retain\" class=\"fn\">retain</a>(&amp;self) -&gt; <a class=\"struct\" href=\"dispatch2/struct.DispatchRetained.html\" title=\"struct dispatch2::DispatchRetained\">DispatchRetained</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"DispatchRetained&lt;Self&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Increment the reference count of the object. <a href=\"dispatch2/trait.DispatchObject.html#method.retain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.context\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/object.rs.html#83-85\">Source</a><a href=\"#method.context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dispatch2/trait.DispatchObject.html#method.context\" class=\"fn\">context</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a></h4></section></summary><div class='docblock'>TODO. <a href=\"dispatch2/trait.DispatchObject.html#method.context\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_context\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/object.rs.html#93-96\">Source</a><a href=\"#method.set_context\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"dispatch2/trait.DispatchObject.html#method.set_context\" class=\"fn\">set_context</a>(&amp;self, context: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a>)</h4></section></summary><div class='docblock'>TODO. <a href=\"dispatch2/trait.DispatchObject.html#method.set_context\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_finalizer_f\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/object.rs.html#104-107\">Source</a><a href=\"#method.set_finalizer_f\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"dispatch2/trait.DispatchObject.html#method.set_finalizer_f\" class=\"fn\">set_finalizer_f</a>(&amp;self, finalizer: <a class=\"type\" href=\"dispatch2/type.dispatch_function_t.html\" title=\"type dispatch2::dispatch_function_t\">dispatch_function_t</a>)</h4></section></summary><div class='docblock'>TODO. <a href=\"dispatch2/trait.DispatchObject.html#method.set_finalizer_f\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_finalizer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/object.rs.html#110-123\">Source</a><a href=\"#method.set_finalizer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dispatch2/trait.DispatchObject.html#method.set_finalizer\" class=\"fn\">set_finalizer</a>&lt;F&gt;(&amp;self, destructor: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(),</div></h4></section></summary><div class='docblock'>Set the finalizer function for the object.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_target_queue\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/object.rs.html#135-138\">Source</a><a href=\"#method.set_target_queue\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"dispatch2/trait.DispatchObject.html#method.set_target_queue\" class=\"fn\">set_target_queue</a>(&amp;self, queue: &amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a>)</h4></section></summary><div class='docblock'>Set the target <a href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\"><code>DispatchQueue</code></a> of this object. <a href=\"dispatch2/trait.DispatchObject.html#method.set_target_queue\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_qos_class_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/object.rs.html#145-158\">Source</a><a href=\"#method.set_qos_class_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"dispatch2/trait.DispatchObject.html#method.set_qos_class_floor\" class=\"fn\">set_qos_class_floor</a>(\n    &amp;self,\n    qos_class: <a class=\"struct\" href=\"dispatch2/struct.DispatchQoS.html\" title=\"struct dispatch2::DispatchQoS\">DispatchQoS</a>,\n    relative_priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"dispatch2/enum.QualityOfServiceClassFloorError.html\" title=\"enum dispatch2::QualityOfServiceClassFloorError\">QualityOfServiceClassFloorError</a>&gt;</h4></section></summary><div class='docblock'>Set the QOS class floor on a dispatch queue, source or workloop. <a href=\"dispatch2/trait.DispatchObject.html#method.set_qos_class_floor\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.activate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/object.rs.html#161-163\">Source</a><a href=\"#method.activate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dispatch2/trait.DispatchObject.html#method.activate\" class=\"fn\">activate</a>(&amp;self)</h4></section></summary><div class='docblock'>Activate the object.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.suspend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/object.rs.html#166-168\">Source</a><a href=\"#method.suspend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dispatch2/trait.DispatchObject.html#method.suspend\" class=\"fn\">suspend</a>(&amp;self)</h4></section></summary><div class='docblock'>Suspend the invocation of functions on the object.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resume\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/object.rs.html#171-173\">Source</a><a href=\"#method.resume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dispatch2/trait.DispatchObject.html#method.resume\" class=\"fn\">resume</a>(&amp;self)</h4></section></summary><div class='docblock'>Resume the invocation of functions on the object.</div></details></div></details>","DispatchObject","dispatch2::Queue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DispatchQueue\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#1149-1348\">Source</a><a href=\"#impl-DispatchQueue\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.exec_after_f\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#1186-1201\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.exec_after_f\" class=\"fn\">exec_after_f</a>(\n    when: <a class=\"struct\" href=\"dispatch2/struct.DispatchTime.html\" title=\"struct dispatch2::DispatchTime\">DispatchTime</a>,\n    queue: &amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a>,\n    context: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a>,\n    work: <a class=\"type\" href=\"dispatch2/type.dispatch_function_t.html\" title=\"type dispatch2::dispatch_function_t\">dispatch_function_t</a>,\n)</h4></section></summary><div class=\"docblock\"><p>Schedule a function for execution on a given queue at a specified time.</p>\n<p>See dispatch_after() for details.</p>\n<p>Parameter <code>when</code>: A temporal milestone returned by dispatch_time() or dispatch_walltime().</p>\n<p>Parameter <code>queue</code>: A queue to which the given function will be submitted at the specified time.\nThe result of passing NULL in this parameter is undefined.</p>\n<p>Parameter <code>context</code>: The application-defined context parameter to pass to the function.</p>\n<p>Parameter <code>work</code>: The application-defined function to invoke on the target queue. The first\nparameter passed to this function is the context provided to\ndispatch_after_f().\nThe result of passing NULL in this parameter is undefined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrier_async_f\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#1239-1252\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.barrier_async_f\" class=\"fn\">barrier_async_f</a>(\n    self: &amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a>,\n    context: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a>,\n    work: <a class=\"type\" href=\"dispatch2/type.dispatch_function_t.html\" title=\"type dispatch2::dispatch_function_t\">dispatch_function_t</a>,\n)</h4></section></summary><div class=\"docblock\"><p>Submits a barrier function for asynchronous execution on a dispatch queue.</p>\n<p>Submits a function to a dispatch queue like dispatch_async_f(), but marks\nthat function as a barrier (relevant only on DISPATCH_QUEUE_CONCURRENT\nqueues).</p>\n<p>See dispatch_async_f() for details and “Dispatch Barrier API” for a\ndescription of the barrier semantics.</p>\n<p>Parameter <code>queue</code>: The target dispatch queue to which the function is submitted.\nThe system will hold a reference on the target queue until the function\nhas returned.\nThe result of passing NULL in this parameter is undefined.</p>\n<p>Parameter <code>context</code>: The application-defined context parameter to pass to the function.</p>\n<p>Parameter <code>work</code>: The application-defined function to invoke on the target queue. The first\nparameter passed to this function is the context provided to\ndispatch_barrier_async_f().\nThe result of passing NULL in this parameter is undefined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrier_sync_f\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#1286-1299\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.barrier_sync_f\" class=\"fn\">barrier_sync_f</a>(\n    self: &amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a>,\n    context: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a>,\n    work: <a class=\"type\" href=\"dispatch2/type.dispatch_function_t.html\" title=\"type dispatch2::dispatch_function_t\">dispatch_function_t</a>,\n)</h4></section></summary><div class=\"docblock\"><p>Submits a barrier function for synchronous execution on a dispatch queue.</p>\n<p>Submits a function to a dispatch queue like dispatch_sync_f(), but marks that\nfuction as a barrier (relevant only on DISPATCH_QUEUE_CONCURRENT queues).</p>\n<p>See dispatch_sync_f() for details.</p>\n<p>Parameter <code>queue</code>: The target dispatch queue to which the function is submitted.\nThe result of passing NULL in this parameter is undefined.</p>\n<p>Parameter <code>context</code>: The application-defined context parameter to pass to the function.</p>\n<p>Parameter <code>work</code>: The application-defined function to invoke on the target queue. The first\nparameter passed to this function is the context provided to\ndispatch_barrier_sync_f().\nThe result of passing NULL in this parameter is undefined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrier_async_and_wait_f\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#1334-1347\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.barrier_async_and_wait_f\" class=\"fn\">barrier_async_and_wait_f</a>(\n    self: &amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a>,\n    context: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a>,\n    work: <a class=\"type\" href=\"dispatch2/type.dispatch_function_t.html\" title=\"type dispatch2::dispatch_function_t\">dispatch_function_t</a>,\n)</h4></section></summary><div class=\"docblock\"><p>Submits a function for synchronous execution on a dispatch queue.</p>\n<p>Submits a function to a dispatch queue like dispatch_async_and_wait_f(), but\nmarks that function as a barrier (relevant only on DISPATCH_QUEUE_CONCURRENT\nqueues).</p>\n<p>See “Dispatch Barrier API” for a description of the barrier semantics.</p>\n<p>Parameter <code>queue</code>: The target dispatch queue to which the function is submitted.\nThe result of passing NULL in this parameter is undefined.</p>\n<p>Parameter <code>context</code>: The application-defined context parameter to pass to the function.</p>\n<p>Parameter <code>work</code>: The application-defined function to invoke on the target queue. The first\nparameter passed to this function is the context provided to\ndispatch_barrier_async_and_wait_f().\nThe result of passing NULL in this parameter is undefined.</p>\n</div></details></div></details>",0,"dispatch2::Queue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DispatchQueue\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#1383-1414\">Source</a><a href=\"#impl-DispatchQueue\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.specific\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#1405-1413\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.specific\" class=\"fn\">specific</a>(\n    self: &amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a>,\n    key: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a>&gt;,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a></h4></section></summary><div class=\"docblock\"><p>Returns the subsystem-specific context associated with a dispatch queue, for\na key unique to the subsystem.</p>\n<p>Returns the context for the specified key if it has been set on the specified\nqueue.</p>\n<p>Parameter <code>queue</code>: The dispatch queue to query.\nThe result of passing NULL in this parameter is undefined.</p>\n<p>Parameter <code>key</code>: The key to get the context for, typically a pointer to a static variable\nspecific to the subsystem. Keys are only compared as pointers and never\ndereferenced. Passing a string constant directly is not recommended.</p>\n<p>Returns: The context for the specified key or NULL if no context was found.</p>\n</div></details></div></details>",0,"dispatch2::Queue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DispatchQueue\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#1437-1528\">Source</a><a href=\"#impl-DispatchQueue\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.assert\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#1474-1480\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.assert\" class=\"fn\">assert</a>(self: &amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a>)</h4></section></summary><div class=\"docblock\"><p>Verifies that the current block is executing on a given dispatch queue.</p>\n<p>Some code expects to be run on a specific dispatch queue. This function\nverifies that that expectation is true.</p>\n<p>If the currently executing block was submitted to the specified queue or to\nany queue targeting it (see dispatch_set_target_queue()), this function\nreturns.</p>\n<p>If the currently executing block was submitted with a synchronous API\n(dispatch_sync(), dispatch_barrier_sync(), …), the context of the\nsubmitting block is also evaluated (recursively).\nIf a synchronously submitting block is found that was itself submitted to\nthe specified queue or to any queue targeting it, this function returns.</p>\n<p>Otherwise this function asserts: it logs an explanation to the system log and\nterminates the application.</p>\n<p>Passing the result of dispatch_get_main_queue() to this function verifies\nthat the current block was submitted to the main queue, or to a queue\ntargeting it, or is running on the main thread (in any context).</p>\n<p>When dispatch_assert_queue() is called outside of the context of a\nsubmitted block (for example from the context of a thread created manually\nwith pthread_create()) then this function will also assert and terminate\nthe application.</p>\n<p>The variant dispatch_assert_queue_debug() is compiled out when the\npreprocessor macro NDEBUG is defined. (See also assert(3)).</p>\n<p>Parameter <code>queue</code>: The dispatch queue that the current block is expected to run on.\nThe result of passing NULL in this parameter is undefined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assert_barrier\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#1499-1504\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.assert_barrier\" class=\"fn\">assert_barrier</a>(self: &amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a>)</h4></section></summary><div class=\"docblock\"><p>Verifies that the current block is executing on a given dispatch queue,\nand that the block acts as a barrier on that queue.</p>\n<p>This behaves exactly like dispatch_assert_queue(), with the additional check\nthat the current block acts as a barrier on the specified queue, which is\nalways true if the specified queue is serial (see DISPATCH_BLOCK_BARRIER or\ndispatch_barrier_async() for details).</p>\n<p>The variant dispatch_assert_queue_barrier_debug() is compiled out when the\npreprocessor macro NDEBUG is defined. (See also assert()).</p>\n<p>Parameter <code>queue</code>: The dispatch queue that the current block is expected to run as a barrier on.\nThe result of passing NULL in this parameter is undefined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assert_not\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#1521-1527\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.assert_not\" class=\"fn\">assert_not</a>(self: &amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a>)</h4></section></summary><div class=\"docblock\"><p>Verifies that the current block is not executing on a given dispatch queue.</p>\n<p>This function is the equivalent of dispatch_assert_queue() with the test for\nequality inverted. That means that it will terminate the application when\ndispatch_assert_queue() would return, and vice-versa. See discussion there.</p>\n<p>The variant dispatch_assert_queue_not_debug() is compiled out when the\npreprocessor macro NDEBUG is defined. (See also assert(3)).</p>\n<p>Parameter <code>queue</code>: The dispatch queue that the current block is expected not to run on.\nThe result of passing NULL in this parameter is undefined.</p>\n</div></details></div></details>",0,"dispatch2::Queue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DispatchQueue\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#324-555\">Source</a><a href=\"#impl-DispatchQueue\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.exec_async_f\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#356-369\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.exec_async_f\" class=\"fn\">exec_async_f</a>(\n    self: &amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a>,\n    context: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a>,\n    work: <a class=\"type\" href=\"dispatch2/type.dispatch_function_t.html\" title=\"type dispatch2::dispatch_function_t\">dispatch_function_t</a>,\n)</h4></section></summary><div class=\"docblock\"><p>Submits a function for asynchronous execution on a dispatch queue.</p>\n<p>See dispatch_async() for details.</p>\n<p>Parameter <code>queue</code>: The target dispatch queue to which the function is submitted.\nThe system will hold a reference on the target queue until the function\nhas returned.\nThe result of passing NULL in this parameter is undefined.</p>\n<p>Parameter <code>context</code>: The application-defined context parameter to pass to the function.</p>\n<p>Parameter <code>work</code>: The application-defined function to invoke on the target queue. The first\nparameter passed to this function is the context provided to\ndispatch_async_f().\nThe result of passing NULL in this parameter is undefined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exec_sync_f\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#400-413\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.exec_sync_f\" class=\"fn\">exec_sync_f</a>(\n    self: &amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a>,\n    context: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a>,\n    work: <a class=\"type\" href=\"dispatch2/type.dispatch_function_t.html\" title=\"type dispatch2::dispatch_function_t\">dispatch_function_t</a>,\n)</h4></section></summary><div class=\"docblock\"><p>Submits a function for synchronous execution on a dispatch queue.</p>\n<p>See dispatch_sync() for details.</p>\n<p>Parameter <code>queue</code>: The target dispatch queue to which the function is submitted.\nThe result of passing NULL in this parameter is undefined.</p>\n<p>Parameter <code>context</code>: The application-defined context parameter to pass to the function.</p>\n<p>Parameter <code>work</code>: The application-defined function to invoke on the target queue. The first\nparameter passed to this function is the context provided to\ndispatch_sync_f().\nThe result of passing NULL in this parameter is undefined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exec_sync_and_wait_f\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#444-457\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.exec_sync_and_wait_f\" class=\"fn\">exec_sync_and_wait_f</a>(\n    self: &amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a>,\n    context: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a>,\n    work: <a class=\"type\" href=\"dispatch2/type.dispatch_function_t.html\" title=\"type dispatch2::dispatch_function_t\">dispatch_function_t</a>,\n)</h4></section></summary><div class=\"docblock\"><p>Submits a function for synchronous execution on a dispatch queue.</p>\n<p>See dispatch_async_and_wait() for details.</p>\n<p>Parameter <code>queue</code>: The target dispatch queue to which the function is submitted.\nThe result of passing NULL in this parameter is undefined.</p>\n<p>Parameter <code>context</code>: The application-defined context parameter to pass to the function.</p>\n<p>Parameter <code>work</code>: The application-defined function to invoke on the target queue. The first\nparameter passed to this function is the context provided to\ndispatch_async_and_wait_f().\nThe result of passing NULL in this parameter is undefined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply_f\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#501-516\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.apply_f\" class=\"fn\">apply_f</a>(\n    iterations: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    queue: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a>&gt;,\n    context: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a>,\n    work: unsafe extern &quot;C-unwind&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>),\n)</h4></section></summary><div class=\"docblock\"><p>Submits a function to a dispatch queue for parallel invocation.</p>\n<p>See dispatch_apply() for details.</p>\n<p>Parameter <code>iterations</code>: The number of iterations to perform.</p>\n<p>Parameter <code>queue</code>: The dispatch queue to which the function is submitted.\nThe preferred value to pass is DISPATCH_APPLY_AUTO to automatically use\na queue appropriate for the calling thread.</p>\n<p>Parameter <code>context</code>: The application-defined context parameter to pass to the function.</p>\n<p>Parameter <code>work</code>: The application-defined function to invoke on the specified queue. The first\nparameter passed to this function is the context provided to\ndispatch_apply_f(). The second parameter passed to this function is the\ncurrent index of iteration.\nThe result of passing NULL in this parameter is undefined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#546-554\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.current\" class=\"fn\">current</a>() -&gt; <a class=\"struct\" href=\"dispatch2/struct.DispatchRetained.html\" title=\"struct dispatch2::DispatchRetained\">DispatchRetained</a>&lt;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"DispatchRetained&lt;DispatchQueue&gt;\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: unsupported interface</span></div></span></summary><div class=\"docblock\"><p>Returns the queue on which the currently executing block is running.</p>\n<p>Returns the queue on which the currently executing block is running.</p>\n<p>When dispatch_get_current_queue() is called outside of the context of a\nsubmitted block, it will return the default concurrent queue.</p>\n<p>Recommended for debugging and logging purposes only:\nThe code must not make any assumptions about the queue returned, unless it\nis one of the global queues or a queue the code has itself created.\nThe code must not assume that synchronous execution onto a queue is safe\nfrom deadlock if that queue is not the one returned by\ndispatch_get_current_queue().</p>\n<p>When dispatch_get_current_queue() is called on the main thread, it may\nor may not return the same value as dispatch_get_main_queue(). Comparing\nthe two is not a valid way to test whether code is executing on the\nmain thread (see dispatch_assert_queue() and dispatch_assert_queue_not()).</p>\n<p>This function is deprecated and will be removed in a future release.</p>\n<p>Returns: Returns the current queue.</p>\n</div></details></div></details>",0,"dispatch2::Queue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DispatchQueue\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#886-1084\">Source</a><a href=\"#impl-DispatchQueue\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.label\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#1032-1038\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.label\" class=\"fn\">label</a>(queue: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/ffi/primitives/type.c_char.html\" title=\"type core::ffi::primitives::c_char\">c_char</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the label of the given queue, as specified when the queue was\ncreated, or the empty string if a NULL label was specified.</p>\n<p>Passing DISPATCH_CURRENT_QUEUE_LABEL will return the label of the current\nqueue.</p>\n<p>Parameter <code>queue</code>: The queue to query, or DISPATCH_CURRENT_QUEUE_LABEL.</p>\n<p>Returns: The label of the queue.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.qos_class\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#1072-1083\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.qos_class\" class=\"fn\">qos_class</a>(\n    self: &amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a>,\n    relative_priority_ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/ffi/primitives/type.c_int.html\" title=\"type core::ffi::primitives::c_int\">c_int</a>,\n) -&gt; <a class=\"struct\" href=\"dispatch2/struct.DispatchQoS.html\" title=\"struct dispatch2::DispatchQoS\">DispatchQoS</a></h4></section></summary><div class=\"docblock\"><p>Returns the QOS class and relative priority of the given queue.</p>\n<p>If the given queue was created with an attribute value returned from\ndispatch_queue_attr_make_with_qos_class(), this function returns the QOS\nclass and relative priority specified at that time; for any other attribute\nvalue it returns a QOS class of QOS_CLASS_UNSPECIFIED and a relative\npriority of 0.</p>\n<p>If the given queue is one of the global queues, this function returns its\nassigned QOS class value as documented under dispatch_get_global_queue() and\na relative priority of 0; in the case of the main queue it returns the QOS\nvalue provided by qos_class_main() and a relative priority of 0.</p>\n<p>Parameter <code>queue</code>: The queue to query.</p>\n<p>Parameter <code>relative_priority_ptr</code>: A pointer to an int variable to be filled with the relative priority offset\nwithin the QOS class, or NULL.</p>\n<p>Returns: A QOS class value:</p>\n<ul>\n<li>QOS_CLASS_USER_INTERACTIVE</li>\n<li>QOS_CLASS_USER_INITIATED</li>\n<li>QOS_CLASS_DEFAULT</li>\n<li>QOS_CLASS_UTILITY</li>\n<li>QOS_CLASS_BACKGROUND</li>\n<li>QOS_CLASS_UNSPECIFIED</li>\n</ul>\n</div></details></div></details>",0,"dispatch2::Queue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DispatchQueue\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#71-228\">Source</a><a href=\"#impl-DispatchQueue\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.APPLY_AUTO\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#219\">Source</a><h4 class=\"code-header\">pub const <a href=\"dispatch2/struct.DispatchQueue.html#associatedconstant.APPLY_AUTO\" class=\"constant\">APPLY_AUTO</a>: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a>&gt; = None</h4></section><section id=\"associatedconstant.TARGET_QUEUE_DEFAULT\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#223\">Source</a><h4 class=\"code-header\">pub const <a href=\"dispatch2/struct.DispatchQueue.html#associatedconstant.TARGET_QUEUE_DEFAULT\" class=\"constant\">TARGET_QUEUE_DEFAULT</a>: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a>&gt; = None</h4></section><section id=\"associatedconstant.CURRENT_QUEUE_LABEL\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#227\">Source</a><h4 class=\"code-header\">pub const <a href=\"dispatch2/struct.DispatchQueue.html#associatedconstant.CURRENT_QUEUE_LABEL\" class=\"constant\">CURRENT_QUEUE_LABEL</a>: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a>&gt; = None</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#73-78\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.new\" class=\"fn\">new</a>(\n    label: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    queue_attribute: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueueAttr.html\" title=\"struct dispatch2::DispatchQueueAttr\">DispatchQueueAttr</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"dispatch2/struct.DispatchRetained.html\" title=\"struct dispatch2::DispatchRetained\">DispatchRetained</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"DispatchRetained&lt;Self&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Create a new <a href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\"><code>DispatchQueue</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_with_target\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#81-90\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.new_with_target\" class=\"fn\">new_with_target</a>(\n    label: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    queue_attribute: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueueAttr.html\" title=\"struct dispatch2::DispatchQueueAttr\">DispatchQueueAttr</a>&gt;,\n    target: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"dispatch2/struct.DispatchRetained.html\" title=\"struct dispatch2::DispatchRetained\">DispatchRetained</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"DispatchRetained&lt;Self&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Create a new <a href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\"><code>DispatchQueue</code></a> with a given target <a href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\"><code>DispatchQueue</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.global_queue\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#93-98\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.global_queue\" class=\"fn\">global_queue</a>(identifier: <a class=\"enum\" href=\"dispatch2/enum.GlobalQueueIdentifier.html\" title=\"enum dispatch2::GlobalQueueIdentifier\">GlobalQueueIdentifier</a>) -&gt; <a class=\"struct\" href=\"dispatch2/struct.DispatchRetained.html\" title=\"struct dispatch2::DispatchRetained\">DispatchRetained</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"DispatchRetained&lt;Self&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Return a system-defined global concurrent <a href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\"><code>DispatchQueue</code></a> with the priority derived from <a href=\"dispatch2/enum.GlobalQueueIdentifier.html\" title=\"enum dispatch2::GlobalQueueIdentifier\">GlobalQueueIdentifier</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.main\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#104-110\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.main\" class=\"fn\">main</a>() -&gt; &amp;'static Self</h4></section></summary><div class=\"docblock\"><p>Return the main queue.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exec_sync\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#113-125\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.exec_sync\" class=\"fn\">exec_sync</a>&lt;F&gt;(&amp;self, work: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(),</div></h4></section></summary><div class=\"docblock\"><p>Submit a function for synchronous execution on the <a href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\"><code>DispatchQueue</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exec_async\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#128-138\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.exec_async\" class=\"fn\">exec_async</a>&lt;F&gt;(&amp;self, work: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() + 'static,</div></h4></section></summary><div class=\"docblock\"><p>Submit a function for asynchronous execution on the <a href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\"><code>DispatchQueue</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#141-151\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.after\" class=\"fn\">after</a>&lt;F&gt;(\n    &amp;self,\n    when: <a class=\"struct\" href=\"dispatch2/struct.DispatchTime.html\" title=\"struct dispatch2::DispatchTime\">DispatchTime</a>,\n    work: F,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"dispatch2/enum.QueueAfterError.html\" title=\"enum dispatch2::QueueAfterError\">QueueAfterError</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(),</div></h4></section></summary><div class=\"docblock\"><p>Enqueue a function for execution at the specified time on the <a href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\"><code>DispatchQueue</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrier_async\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#154-164\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.barrier_async\" class=\"fn\">barrier_async</a>&lt;F&gt;(&amp;self, work: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() + 'static,</div></h4></section></summary><div class=\"docblock\"><p>Enqueue a barrier function for asynchronous execution on the <a href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\"><code>DispatchQueue</code></a> and return immediately.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrier_sync\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#167-175\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.barrier_sync\" class=\"fn\">barrier_sync</a>&lt;F&gt;(&amp;self, work: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(),</div></h4></section></summary><div class=\"docblock\"><p>Enqueue a barrier function for synchronous execution on the <a href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\"><code>DispatchQueue</code></a> and wait until that function completes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrier_async_and_wait\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#178-188\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.barrier_async_and_wait\" class=\"fn\">barrier_async_and_wait</a>&lt;F&gt;(&amp;self, work: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() + 'static,</div></h4></section></summary><div class=\"docblock\"><p>Submit a function for synchronous execution and mark the function as a barrier for subsequent concurrent tasks.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_specific\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#191-205\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.set_specific\" class=\"fn\">set_specific</a>&lt;F&gt;(&amp;self, key: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;, destructor: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(),</div></h4></section></summary><div class=\"docblock\"><p>Sets a function at the given key that will be executed at <a href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\"><code>DispatchQueue</code></a> destruction.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_qos_class_floor\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#208-215\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dispatch2/struct.DispatchQueue.html#tymethod.set_qos_class_floor\" class=\"fn\">set_qos_class_floor</a>(\n    &amp;self,\n    qos_class: <a class=\"struct\" href=\"dispatch2/struct.DispatchQoS.html\" title=\"struct dispatch2::DispatchQoS\">DispatchQoS</a>,\n    relative_priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"dispatch2/enum.QualityOfServiceClassFloorError.html\" title=\"enum dispatch2::QualityOfServiceClassFloorError\">QualityOfServiceClassFloorError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Set the QOS class floor of the <a href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\"><code>DispatchQueue</code></a>.</p>\n</div></details></div></details>",0,"dispatch2::Queue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-DispatchQueue\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#62-67\">Source</a><a href=\"#impl-Hash-for-DispatchQueue\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#62-67\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","dispatch2::Queue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Message-for-DispatchQueue\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#62-67\">Source</a><a href=\"#impl-Message-for-DispatchQueue\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"objc2/top_level_traits/trait.Message.html\" title=\"trait objc2::top_level_traits::Message\">Message</a> for <a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>objc2</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/objc2/top_level_traits.rs.html#105-107\">Source</a><a href=\"#method.retain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"objc2/top_level_traits/trait.Message.html#method.retain\" class=\"fn\">retain</a>(&amp;self) -&gt; <a class=\"struct\" href=\"objc2/rc/retained/struct.Retained.html\" title=\"struct objc2::rc::retained::Retained\">Retained</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Increment the reference count of the receiver. <a href=\"objc2/top_level_traits/trait.Message.html#method.retain\">Read more</a></div></details></div></details>","Message","dispatch2::Queue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-DispatchQueue\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#62-67\">Source</a><a href=\"#impl-PartialEq-for-DispatchQueue\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#62-67\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Compare this [<code>$type</code>] with another using pointer equality.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","dispatch2::Queue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RefEncode-for-DispatchQueue\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#62-67\">Source</a><a href=\"#impl-RefEncode-for-DispatchQueue\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"objc2/encode/trait.RefEncode.html\" title=\"trait objc2::encode::RefEncode\">RefEncode</a> for <a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>objc2</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ENCODING_REF\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#62-67\">Source</a><a href=\"#associatedconstant.ENCODING_REF\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"objc2/encode/trait.RefEncode.html#associatedconstant.ENCODING_REF\" class=\"constant\">ENCODING_REF</a>: <a class=\"enum\" href=\"objc2_encode/encoding/enum.Encoding.html\" title=\"enum objc2_encode::encoding::Encoding\">Encoding</a> = objc2::encode::Encoding::Object</h4></section></summary><div class='docblock'>The Objective-C type-encoding for a reference of this type. <a href=\"objc2/encode/trait.RefEncode.html#associatedconstant.ENCODING_REF\">Read more</a></div></details></div></details>","RefEncode","dispatch2::Queue"],["<section id=\"impl-Eq-for-DispatchQueue\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#62-67\">Source</a><a href=\"#impl-Eq-for-DispatchQueue\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a></h3></section>","Eq","dispatch2::Queue"],["<section id=\"impl-Send-for-DispatchQueue\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#69\">Source</a><a href=\"#impl-Send-for-DispatchQueue\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a></h3></section>","Send","dispatch2::Queue"],["<section id=\"impl-Sync-for-DispatchQueue\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/queue.rs.html#69\">Source</a><a href=\"#impl-Sync-for-DispatchQueue\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a></h3></section>","Sync","dispatch2::Queue"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[67119]}