(function() {
    var type_impls = Object.fromEntries([["dispatch2",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CAnyObject%3E-for-DispatchSemaphore\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/semaphore.rs.html#7-12\">Source</a><a href=\"#impl-AsRef%3CAnyObject%3E-for-DispatchSemaphore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"objc2/runtime/struct.AnyObject.html\" title=\"struct objc2::runtime::AnyObject\">AnyObject</a>&gt; for <a class=\"struct\" href=\"dispatch2/struct.DispatchSemaphore.html\" title=\"struct dispatch2::DispatchSemaphore\">DispatchSemaphore</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>objc2</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/semaphore.rs.html#7-12\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"objc2/runtime/struct.AnyObject.html\" title=\"struct objc2::runtime::AnyObject\">AnyObject</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<AnyObject>","dispatch2::Semaphore"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CDispatchSemaphore%3E-for-DispatchSemaphore\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/semaphore.rs.html#7-12\">Source</a><a href=\"#impl-AsRef%3CDispatchSemaphore%3E-for-DispatchSemaphore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"dispatch2/struct.DispatchSemaphore.html\" title=\"struct dispatch2::DispatchSemaphore\">DispatchSemaphore</a>&gt; for <a class=\"struct\" href=\"dispatch2/struct.DispatchSemaphore.html\" title=\"struct dispatch2::DispatchSemaphore\">DispatchSemaphore</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/semaphore.rs.html#7-12\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;Self</h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<DispatchSemaphore>","dispatch2::Semaphore"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-DispatchSemaphore\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/semaphore.rs.html#7-12\">Source</a><a href=\"#impl-Debug-for-DispatchSemaphore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"dispatch2/struct.DispatchSemaphore.html\" title=\"struct dispatch2::DispatchSemaphore\">DispatchSemaphore</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/semaphore.rs.html#7-12\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","dispatch2::Semaphore"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DispatchObject-for-DispatchSemaphore\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/semaphore.rs.html#7-12\">Source</a><a href=\"#impl-DispatchObject-for-DispatchSemaphore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dispatch2/trait.DispatchObject.html\" title=\"trait dispatch2::DispatchObject\">DispatchObject</a> for <a class=\"struct\" href=\"dispatch2/struct.DispatchSemaphore.html\" title=\"struct dispatch2::DispatchSemaphore\">DispatchSemaphore</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/object.rs.html#68-75\">Source</a><a href=\"#method.retain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dispatch2/trait.DispatchObject.html#method.retain\" class=\"fn\">retain</a>(&amp;self) -&gt; <a class=\"struct\" href=\"dispatch2/struct.DispatchRetained.html\" title=\"struct dispatch2::DispatchRetained\">DispatchRetained</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"DispatchRetained&lt;Self&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Increment the reference count of the object. <a href=\"dispatch2/trait.DispatchObject.html#method.retain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.context\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/object.rs.html#83-85\">Source</a><a href=\"#method.context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dispatch2/trait.DispatchObject.html#method.context\" class=\"fn\">context</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a></h4></section></summary><div class='docblock'>TODO. <a href=\"dispatch2/trait.DispatchObject.html#method.context\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_context\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/object.rs.html#93-96\">Source</a><a href=\"#method.set_context\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"dispatch2/trait.DispatchObject.html#method.set_context\" class=\"fn\">set_context</a>(&amp;self, context: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a>)</h4></section></summary><div class='docblock'>TODO. <a href=\"dispatch2/trait.DispatchObject.html#method.set_context\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_finalizer_f\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/object.rs.html#104-107\">Source</a><a href=\"#method.set_finalizer_f\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"dispatch2/trait.DispatchObject.html#method.set_finalizer_f\" class=\"fn\">set_finalizer_f</a>(&amp;self, finalizer: <a class=\"type\" href=\"dispatch2/type.dispatch_function_t.html\" title=\"type dispatch2::dispatch_function_t\">dispatch_function_t</a>)</h4></section></summary><div class='docblock'>TODO. <a href=\"dispatch2/trait.DispatchObject.html#method.set_finalizer_f\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_finalizer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/object.rs.html#110-123\">Source</a><a href=\"#method.set_finalizer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dispatch2/trait.DispatchObject.html#method.set_finalizer\" class=\"fn\">set_finalizer</a>&lt;F&gt;(&amp;self, destructor: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(),</div></h4></section></summary><div class='docblock'>Set the finalizer function for the object.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_target_queue\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/object.rs.html#135-138\">Source</a><a href=\"#method.set_target_queue\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"dispatch2/trait.DispatchObject.html#method.set_target_queue\" class=\"fn\">set_target_queue</a>(&amp;self, queue: &amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\">DispatchQueue</a>)</h4></section></summary><div class='docblock'>Set the target <a href=\"dispatch2/struct.DispatchQueue.html\" title=\"struct dispatch2::DispatchQueue\"><code>DispatchQueue</code></a> of this object. <a href=\"dispatch2/trait.DispatchObject.html#method.set_target_queue\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_qos_class_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/object.rs.html#145-158\">Source</a><a href=\"#method.set_qos_class_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"dispatch2/trait.DispatchObject.html#method.set_qos_class_floor\" class=\"fn\">set_qos_class_floor</a>(\n    &amp;self,\n    qos_class: <a class=\"struct\" href=\"dispatch2/struct.DispatchQoS.html\" title=\"struct dispatch2::DispatchQoS\">DispatchQoS</a>,\n    relative_priority: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"dispatch2/enum.QualityOfServiceClassFloorError.html\" title=\"enum dispatch2::QualityOfServiceClassFloorError\">QualityOfServiceClassFloorError</a>&gt;</h4></section></summary><div class='docblock'>Set the QOS class floor on a dispatch queue, source or workloop. <a href=\"dispatch2/trait.DispatchObject.html#method.set_qos_class_floor\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.activate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/object.rs.html#161-163\">Source</a><a href=\"#method.activate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dispatch2/trait.DispatchObject.html#method.activate\" class=\"fn\">activate</a>(&amp;self)</h4></section></summary><div class='docblock'>Activate the object.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.suspend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/object.rs.html#166-168\">Source</a><a href=\"#method.suspend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dispatch2/trait.DispatchObject.html#method.suspend\" class=\"fn\">suspend</a>(&amp;self)</h4></section></summary><div class='docblock'>Suspend the invocation of functions on the object.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resume\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/object.rs.html#171-173\">Source</a><a href=\"#method.resume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dispatch2/trait.DispatchObject.html#method.resume\" class=\"fn\">resume</a>(&amp;self)</h4></section></summary><div class='docblock'>Resume the invocation of functions on the object.</div></details></div></details>","DispatchObject","dispatch2::Semaphore"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DispatchSemaphore\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#2935-3010\">Source</a><a href=\"#impl-DispatchSemaphore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"dispatch2/struct.DispatchSemaphore.html\" title=\"struct dispatch2::DispatchSemaphore\">DispatchSemaphore</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#2953-2961\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dispatch2/struct.DispatchSemaphore.html#tymethod.new\" class=\"fn\">new</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"struct\" href=\"dispatch2/struct.DispatchRetained.html\" title=\"struct dispatch2::DispatchRetained\">DispatchRetained</a>&lt;<a class=\"struct\" href=\"dispatch2/struct.DispatchSemaphore.html\" title=\"struct dispatch2::DispatchSemaphore\">DispatchSemaphore</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"DispatchRetained&lt;DispatchSemaphore&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Creates new counting semaphore with an initial value.</p>\n<p>Passing zero for the value is useful for when two threads need to reconcile\nthe completion of a particular event. Passing a value greater than zero is\nuseful for managing a finite pool of resources, where the pool size is equal\nto the value.</p>\n<p>Parameter <code>value</code>: The starting value for the semaphore. Passing a value less than zero will\ncause NULL to be returned.</p>\n<p>Returns: The newly created semaphore, or NULL on failure.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#2982-2987\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dispatch2/struct.DispatchSemaphore.html#tymethod.wait\" class=\"fn\">wait</a>(self: &amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchSemaphore.html\" title=\"struct dispatch2::DispatchSemaphore\">DispatchSemaphore</a>, timeout: <a class=\"struct\" href=\"dispatch2/struct.DispatchTime.html\" title=\"struct dispatch2::DispatchTime\">DispatchTime</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h4></section></summary><div class=\"docblock\"><p>Wait (decrement) for a semaphore.</p>\n<p>Decrement the counting semaphore. If the resulting value is less than zero,\nthis function waits for a signal to occur before returning. If the timeout is\nreached without a signal being received, the semaphore is re-incremented\nbefore the function returns.</p>\n<p>Parameter <code>dsema</code>: The semaphore. The result of passing NULL in this parameter is undefined.</p>\n<p>Parameter <code>timeout</code>: When to timeout (see dispatch_time). As a convenience, there are the\nDISPATCH_TIME_NOW and DISPATCH_TIME_FOREVER constants.</p>\n<p>Returns: Returns zero on success, or non-zero if the timeout occurred.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signal\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/generated/mod.rs.html#3004-3009\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dispatch2/struct.DispatchSemaphore.html#tymethod.signal\" class=\"fn\">signal</a>(self: &amp;<a class=\"struct\" href=\"dispatch2/struct.DispatchSemaphore.html\" title=\"struct dispatch2::DispatchSemaphore\">DispatchSemaphore</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h4></section></summary><div class=\"docblock\"><p>Signal (increment) a semaphore.</p>\n<p>Increment the counting semaphore. If the previous value was less than zero,\nthis function wakes a waiting thread before returning.</p>\n<p>Parameter <code>dsema</code>: The counting semaphore.\nThe result of passing NULL in this parameter is undefined.</p>\n<p>Returns: This function returns non-zero if a thread is woken. Otherwise, zero is\nreturned.</p>\n</div></details></div></details>",0,"dispatch2::Semaphore"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DispatchSemaphore\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/semaphore.rs.html#16-33\">Source</a><a href=\"#impl-DispatchSemaphore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"dispatch2/struct.DispatchSemaphore.html\" title=\"struct dispatch2::DispatchSemaphore\">DispatchSemaphore</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_acquire\" class=\"method\"><a class=\"src rightside\" href=\"src/dispatch2/semaphore.rs.html#24-32\">Source</a><h4 class=\"code-header\">pub fn <a href=\"dispatch2/struct.DispatchSemaphore.html#tymethod.try_acquire\" class=\"fn\">try_acquire</a>(\n    &amp;self,\n    timeout: <a class=\"struct\" href=\"dispatch2/struct.DispatchTime.html\" title=\"struct dispatch2::DispatchTime\">DispatchTime</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"dispatch2/struct.DispatchSemaphoreGuard.html\" title=\"struct dispatch2::DispatchSemaphoreGuard\">DispatchSemaphoreGuard</a>, <a class=\"enum\" href=\"dispatch2/enum.WaitError.html\" title=\"enum dispatch2::WaitError\">WaitError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempt to acquire the <a href=\"dispatch2/struct.DispatchSemaphore.html\" title=\"struct dispatch2::DispatchSemaphore\"><code>DispatchSemaphore</code></a> and return a <a href=\"dispatch2/struct.DispatchSemaphoreGuard.html\" title=\"struct dispatch2::DispatchSemaphoreGuard\"><code>DispatchSemaphoreGuard</code></a>.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>Return <a href=\"dispatch2/enum.WaitError.html#variant.TimeOverflow\" title=\"variant dispatch2::WaitError::TimeOverflow\">WaitError::TimeOverflow</a> if the passed <code>timeout</code> is too big.</p>\n<p>Return <a href=\"dispatch2/enum.WaitError.html#variant.Timeout\" title=\"variant dispatch2::WaitError::Timeout\">WaitError::Timeout</a> in case of timeout.</p>\n</div></details></div></details>",0,"dispatch2::Semaphore"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-DispatchSemaphore\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/semaphore.rs.html#7-12\">Source</a><a href=\"#impl-Hash-for-DispatchSemaphore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"dispatch2/struct.DispatchSemaphore.html\" title=\"struct dispatch2::DispatchSemaphore\">DispatchSemaphore</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/semaphore.rs.html#7-12\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","dispatch2::Semaphore"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Message-for-DispatchSemaphore\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/semaphore.rs.html#7-12\">Source</a><a href=\"#impl-Message-for-DispatchSemaphore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"objc2/top_level_traits/trait.Message.html\" title=\"trait objc2::top_level_traits::Message\">Message</a> for <a class=\"struct\" href=\"dispatch2/struct.DispatchSemaphore.html\" title=\"struct dispatch2::DispatchSemaphore\">DispatchSemaphore</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>objc2</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/objc2/top_level_traits.rs.html#105-107\">Source</a><a href=\"#method.retain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"objc2/top_level_traits/trait.Message.html#method.retain\" class=\"fn\">retain</a>(&amp;self) -&gt; <a class=\"struct\" href=\"objc2/rc/retained/struct.Retained.html\" title=\"struct objc2::rc::retained::Retained\">Retained</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Increment the reference count of the receiver. <a href=\"objc2/top_level_traits/trait.Message.html#method.retain\">Read more</a></div></details></div></details>","Message","dispatch2::Semaphore"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-DispatchSemaphore\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/semaphore.rs.html#7-12\">Source</a><a href=\"#impl-PartialEq-for-DispatchSemaphore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"dispatch2/struct.DispatchSemaphore.html\" title=\"struct dispatch2::DispatchSemaphore\">DispatchSemaphore</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/semaphore.rs.html#7-12\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Compare this [<code>$type</code>] with another using pointer equality.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","dispatch2::Semaphore"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RefEncode-for-DispatchSemaphore\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/semaphore.rs.html#7-12\">Source</a><a href=\"#impl-RefEncode-for-DispatchSemaphore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"objc2/encode/trait.RefEncode.html\" title=\"trait objc2::encode::RefEncode\">RefEncode</a> for <a class=\"struct\" href=\"dispatch2/struct.DispatchSemaphore.html\" title=\"struct dispatch2::DispatchSemaphore\">DispatchSemaphore</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>objc2</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ENCODING_REF\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/dispatch2/semaphore.rs.html#7-12\">Source</a><a href=\"#associatedconstant.ENCODING_REF\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"objc2/encode/trait.RefEncode.html#associatedconstant.ENCODING_REF\" class=\"constant\">ENCODING_REF</a>: <a class=\"enum\" href=\"objc2_encode/encoding/enum.Encoding.html\" title=\"enum objc2_encode::encoding::Encoding\">Encoding</a> = objc2::encode::Encoding::Object</h4></section></summary><div class='docblock'>The Objective-C type-encoding for a reference of this type. <a href=\"objc2/encode/trait.RefEncode.html#associatedconstant.ENCODING_REF\">Read more</a></div></details></div></details>","RefEncode","dispatch2::Semaphore"],["<section id=\"impl-Eq-for-DispatchSemaphore\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/semaphore.rs.html#7-12\">Source</a><a href=\"#impl-Eq-for-DispatchSemaphore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"dispatch2/struct.DispatchSemaphore.html\" title=\"struct dispatch2::DispatchSemaphore\">DispatchSemaphore</a></h3></section>","Eq","dispatch2::Semaphore"],["<section id=\"impl-Send-for-DispatchSemaphore\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/semaphore.rs.html#14\">Source</a><a href=\"#impl-Send-for-DispatchSemaphore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"dispatch2/struct.DispatchSemaphore.html\" title=\"struct dispatch2::DispatchSemaphore\">DispatchSemaphore</a></h3></section>","Send","dispatch2::Semaphore"],["<section id=\"impl-Sync-for-DispatchSemaphore\" class=\"impl\"><a class=\"src rightside\" href=\"src/dispatch2/semaphore.rs.html#14\">Source</a><a href=\"#impl-Sync-for-DispatchSemaphore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"dispatch2/struct.DispatchSemaphore.html\" title=\"struct dispatch2::DispatchSemaphore\">DispatchSemaphore</a></h3></section>","Sync","dispatch2::Semaphore"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[29910]}