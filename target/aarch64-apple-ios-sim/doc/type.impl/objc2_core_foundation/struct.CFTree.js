(function() {
    var type_impls = Object.fromEntries([["objc2_core_foundation",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CAnyObject%3E-for-CFTree\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#115-117\">Source</a><a href=\"#impl-AsRef%3CAnyObject%3E-for-CFTree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"objc2/runtime/struct.AnyObject.html\" title=\"struct objc2::runtime::AnyObject\">AnyObject</a>&gt; for <a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#115-117\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"objc2/runtime/struct.AnyObject.html\" title=\"struct objc2::runtime::AnyObject\">AnyObject</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<AnyObject>","objc2_core_foundation::generated::__CFXMLNode::CFXMLTree"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CCFTree%3E-for-CFTree\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#111-113\">Source</a><a href=\"#impl-AsRef%3CCFTree%3E-for-CFTree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a>&gt; for <a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#111-113\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;Self</h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<CFTree>","objc2_core_foundation::generated::__CFXMLNode::CFXMLTree"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CCFType%3E-for-CFTree\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#111-113\">Source</a><a href=\"#impl-AsRef%3CCFType%3E-for-CFTree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFType.html\" title=\"struct objc2_core_foundation::CFType\">CFType</a>&gt; for <a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#111-113\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFType.html\" title=\"struct objc2_core_foundation::CFType\">CFType</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<CFType>","objc2_core_foundation::generated::__CFXMLNode::CFXMLTree"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3CAnyObject%3E-for-CFTree\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#115-117\">Source</a><a href=\"#impl-Borrow%3CAnyObject%3E-for-CFTree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"struct\" href=\"objc2/runtime/struct.AnyObject.html\" title=\"struct objc2::runtime::AnyObject\">AnyObject</a>&gt; for <a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#115-117\">Source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"objc2/runtime/struct.AnyObject.html\" title=\"struct objc2::runtime::AnyObject\">AnyObject</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<AnyObject>","objc2_core_foundation::generated::__CFXMLNode::CFXMLTree"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3CCFType%3E-for-CFTree\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#111-113\">Source</a><a href=\"#impl-Borrow%3CCFType%3E-for-CFTree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFType.html\" title=\"struct objc2_core_foundation::CFType\">CFType</a>&gt; for <a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#111-113\">Source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFType.html\" title=\"struct objc2_core_foundation::CFType\">CFType</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<CFType>","objc2_core_foundation::generated::__CFXMLNode::CFXMLTree"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CFTree\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#131-507\">Source</a><a href=\"#impl-CFTree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#156-168\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"objc2_core_foundation/struct.CFTree.html#tymethod.new\" class=\"fn\">new</a>(\n    allocator: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFAllocator.html\" title=\"struct objc2_core_foundation::CFAllocator\">CFAllocator</a>&gt;,\n    context: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a><a class=\"struct\" href=\"objc2_core_foundation/struct.CFTreeContext.html\" title=\"struct objc2_core_foundation::CFTreeContext\">CFTreeContext</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFRetained.html\" title=\"struct objc2_core_foundation::CFRetained\">CFRetained</a>&lt;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new mutable tree.</p>\n<p>Parameter <code>allocator</code>: The CFAllocator which should be used to allocate\nmemory for the tree and storage for its children.  This\nparameter may be NULL in which case the current default\nCFAllocator is used.  If this reference is not a valid\nCFAllocator, the behavior is undefined.</p>\n<p>Parameter <code>context</code>: A C pointer to a CFTreeContext structure to be copied\nand used as the context of the new tree.  The info parameter\nwill be retained by the tree if a retain function is provided.\nIf this value is not a valid C pointer to a CFTreeContext\nstructure-sized block of storage, the result is undefined.\nIf the version number of the storage is not a valid CFTreeContext\nversion number, the result is undefined.</p>\n<p>Returns: A reference to the new CFTree.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<ul>\n<li><code>allocator</code> might not allow <code>None</code>.</li>\n<li><code>context</code> must be a valid pointer.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parent\" class=\"method\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#178-184\">Source</a><h4 class=\"code-header\">pub fn <a href=\"objc2_core_foundation/struct.CFTree.html#tymethod.parent\" class=\"fn\">parent</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFRetained.html\" title=\"struct objc2_core_foundation::CFRetained\">CFRetained</a>&lt;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the parent of the specified tree.</p>\n<p>Parameter <code>tree</code>: The tree to be queried.  If this parameter is not a valid\nCFTree, the behavior is undefined.</p>\n<p>Returns: The parent of the tree.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_sibling\" class=\"method\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#194-200\">Source</a><h4 class=\"code-header\">pub fn <a href=\"objc2_core_foundation/struct.CFTree.html#tymethod.next_sibling\" class=\"fn\">next_sibling</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFRetained.html\" title=\"struct objc2_core_foundation::CFRetained\">CFRetained</a>&lt;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the sibling after the specified tree in the parent tree’s list.</p>\n<p>Parameter <code>tree</code>: The tree to be queried.  If this parameter is not a valid\nCFTree, the behavior is undefined.</p>\n<p>Returns: The next sibling of the tree.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.first_child\" class=\"method\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#210-216\">Source</a><h4 class=\"code-header\">pub fn <a href=\"objc2_core_foundation/struct.CFTree.html#tymethod.first_child\" class=\"fn\">first_child</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFRetained.html\" title=\"struct objc2_core_foundation::CFRetained\">CFRetained</a>&lt;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the first child of the tree.</p>\n<p>Parameter <code>tree</code>: The tree to be queried.  If this parameter is not a valid\nCFTree, the behavior is undefined.</p>\n<p>Returns: The first child of the tree.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.context\" class=\"method\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#234-239\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"objc2_core_foundation/struct.CFTree.html#tymethod.context\" class=\"fn\">context</a>(&amp;self, context: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"objc2_core_foundation/struct.CFTreeContext.html\" title=\"struct objc2_core_foundation::CFTreeContext\">CFTreeContext</a>)</h4></section></summary><div class=\"docblock\"><p>Returns the context of the specified tree.</p>\n<p>Parameter <code>tree</code>: The tree to be queried.  If this parameter is not a valid\nCFTree, the behavior is undefined.</p>\n<p>Parameter <code>context</code>: A C pointer to a CFTreeContext structure to be filled in with\nthe context of the specified tree.  If this value is not a valid C\npointer to a CFTreeContext structure-sized block of storage, the\nresult is undefined.  If the version number of the storage is not\na valid CFTreeContext version number, the result is undefined.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p><code>context</code> must be a valid pointer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.child_count\" class=\"method\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#249-254\">Source</a><h4 class=\"code-header\">pub fn <a href=\"objc2_core_foundation/struct.CFTree.html#tymethod.child_count\" class=\"fn\">child_count</a>(&amp;self) -&gt; <a class=\"type\" href=\"objc2_core_foundation/type.CFIndex.html\" title=\"type objc2_core_foundation::CFIndex\">CFIndex</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of children of the specified tree.</p>\n<p>Parameter <code>tree</code>: The tree to be queried.  If this parameter is not a valid\nCFTree, the behavior is undefined.</p>\n<p>Returns: The number of children.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.child_at_index\" class=\"method\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#268-274\">Source</a><h4 class=\"code-header\">pub fn <a href=\"objc2_core_foundation/struct.CFTree.html#tymethod.child_at_index\" class=\"fn\">child_at_index</a>(&amp;self, idx: <a class=\"type\" href=\"objc2_core_foundation/type.CFIndex.html\" title=\"type objc2_core_foundation::CFIndex\">CFIndex</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFRetained.html\" title=\"struct objc2_core_foundation::CFRetained\">CFRetained</a>&lt;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the nth child of the specified tree.</p>\n<p>Parameter <code>tree</code>: The tree to be queried.  If this parameter is not a valid\nCFTree, the behavior is undefined.</p>\n<p>Parameter <code>idx</code>: The index of the child tree to be returned.  If this parameter\nis less than zero or greater than the number of children of the\ntree, the result is undefined.</p>\n<p>Returns: A reference to the specified child tree.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.children\" class=\"method\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#290-295\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"objc2_core_foundation/struct.CFTree.html#tymethod.children\" class=\"fn\">children</a>(&amp;self, children: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a>)</h4></section></summary><div class=\"docblock\"><p>Fills the buffer with children from the tree.</p>\n<p>Parameter <code>tree</code>: The tree to be queried.  If this parameter is not a valid\nCFTree, the behavior is undefined.</p>\n<p>Parameter <code>children</code>: A C array of pointer-sized values to be filled with\nchildren from the tree.  If this parameter is not a valid pointer to a\nC array of at least CFTreeGetChildCount() pointers, the behavior is undefined.</p>\n<h5 id=\"safety-2\"><a class=\"doc-anchor\" href=\"#safety-2\">§</a>Safety</h5>\n<p><code>children</code> must be a valid pointer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply_function_to_children\" class=\"method\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#322-335\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"objc2_core_foundation/struct.CFTree.html#tymethod.apply_function_to_children\" class=\"fn\">apply_function_to_children</a>(\n    &amp;self,\n    applier: <a class=\"type\" href=\"objc2_core_foundation/type.CFTreeApplierFunction.html\" title=\"type objc2_core_foundation::CFTreeApplierFunction\">CFTreeApplierFunction</a>,\n    context: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a>,\n)</h4></section></summary><div class=\"docblock\"><p>Calls a function once for each child of the tree.  Note that the applier\nonly operates one level deep, and does not operate on descendents further\nremoved than the immediate children of the tree.</p>\n<p>Parameter <code>tree</code>: The tree to be operated upon.  If this parameter is not a\nvalid CFTree, the behavior is undefined.</p>\n<p>Parameter <code>applier</code>: The callback function to call once for each child of\nthe given tree.  If this parameter is not a pointer to a\nfunction of the correct prototype, the behavior is undefined.\nIf there are values in the tree which the applier function does\nnot expect or cannot properly apply to, the behavior is undefined.</p>\n<p>Parameter <code>context</code>: A pointer-sized user-defined value, which is passed\nas the second parameter to the applier function, but is\notherwise unused by this function.  If the context is not\nwhat is expected by the applier function, the behavior is\nundefined.</p>\n<h5 id=\"safety-3\"><a class=\"doc-anchor\" href=\"#safety-3\">§</a>Safety</h5>\n<ul>\n<li><code>applier</code> must be implemented correctly.</li>\n<li><code>context</code> must be a valid pointer.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_root\" class=\"method\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#345-351\">Source</a><h4 class=\"code-header\">pub fn <a href=\"objc2_core_foundation/struct.CFTree.html#tymethod.find_root\" class=\"fn\">find_root</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFRetained.html\" title=\"struct objc2_core_foundation::CFRetained\">CFRetained</a>&lt;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the root tree of which the specified tree is a descendent.</p>\n<p>Parameter <code>tree</code>: The tree to be queried.  If this parameter is not a valid\nCFTree, the behavior is undefined.</p>\n<p>Returns: A reference to the root of the tree.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_context\" class=\"method\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#372-377\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"objc2_core_foundation/struct.CFTree.html#tymethod.set_context\" class=\"fn\">set_context</a>(&amp;self, context: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a><a class=\"struct\" href=\"objc2_core_foundation/struct.CFTreeContext.html\" title=\"struct objc2_core_foundation::CFTreeContext\">CFTreeContext</a>)</h4></section></summary><div class=\"docblock\"><p>Replaces the context of a tree.  The tree releases its retain on the\ninfo of the previous context, and retains the info of the new context.</p>\n<p>Parameter <code>tree</code>: The tree to be operated on.  If this parameter is not a valid\nCFTree, the behavior is undefined.</p>\n<p>Parameter <code>context</code>: A C pointer to a CFTreeContext structure to be copied\nand used as the context of the new tree.  The info parameter\nwill be retained by the tree if a retain function is provided.\nIf this value is not a valid C pointer to a CFTreeContext\nstructure-sized block of storage, the result is undefined.\nIf the version number of the storage is not a valid CFTreeContext\nversion number, the result is undefined.</p>\n<h5 id=\"safety-4\"><a class=\"doc-anchor\" href=\"#safety-4\">§</a>Safety</h5>\n<p><code>context</code> must be a valid pointer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepend_child\" class=\"method\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#394-399\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"objc2_core_foundation/struct.CFTree.html#tymethod.prepend_child\" class=\"fn\">prepend_child</a>(&amp;self, new_child: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Adds the newChild to the specified tree as the first in its list of children.</p>\n<p>Parameter <code>tree</code>: The tree to be operated on.  If this parameter is not a valid\nCFTree, the behavior is undefined.</p>\n<p>Parameter <code>newChild</code>: The child to be added.\nIf this parameter is not a valid CFTree, the behavior is undefined.\nIf this parameter is a tree which is already a child of any tree,\nthe behavior is undefined.</p>\n<h5 id=\"safety-5\"><a class=\"doc-anchor\" href=\"#safety-5\">§</a>Safety</h5>\n<p><code>new_child</code> might not allow <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append_child\" class=\"method\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#416-421\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"objc2_core_foundation/struct.CFTree.html#tymethod.append_child\" class=\"fn\">append_child</a>(&amp;self, new_child: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Adds the newChild to the specified tree as the last in its list of children.</p>\n<p>Parameter <code>tree</code>: The tree to be operated on.  If this parameter is not a valid\nCFTree, the behavior is undefined.</p>\n<p>Parameter <code>newChild</code>: The child to be added.\nIf this parameter is not a valid CFTree, the behavior is undefined.\nIf this parameter is a tree which is already a child of any tree,\nthe behavior is undefined.</p>\n<h5 id=\"safety-6\"><a class=\"doc-anchor\" href=\"#safety-6\">§</a>Safety</h5>\n<p><code>new_child</code> might not allow <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_sibling\" class=\"method\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#440-445\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"objc2_core_foundation/struct.CFTree.html#tymethod.insert_sibling\" class=\"fn\">insert_sibling</a>(&amp;self, new_sibling: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Inserts newSibling into the the parent tree’s linked list of children after\ntree.  The newSibling will have the same parent as tree.</p>\n<p>Parameter <code>tree</code>: The tree to insert newSibling after.  If this parameter is not a valid\nCFTree, the behavior is undefined.  If the tree does not have a\nparent, the behavior is undefined.</p>\n<p>Parameter <code>newSibling</code>: The sibling to be added.\nIf this parameter is not a valid CFTree, the behavior is undefined.\nIf this parameter is a tree which is already a child of any tree,\nthe behavior is undefined.</p>\n<h5 id=\"safety-7\"><a class=\"doc-anchor\" href=\"#safety-7\">§</a>Safety</h5>\n<p><code>new_sibling</code> might not allow <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#453-458\">Source</a><h4 class=\"code-header\">pub fn <a href=\"objc2_core_foundation/struct.CFTree.html#tymethod.remove\" class=\"fn\">remove</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Removes the tree from its parent.</p>\n<p>Parameter <code>tree</code>: The tree to be removed.  If this parameter is not a valid\nCFTree, the behavior is undefined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all_children\" class=\"method\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#466-471\">Source</a><h4 class=\"code-header\">pub fn <a href=\"objc2_core_foundation/struct.CFTree.html#tymethod.remove_all_children\" class=\"fn\">remove_all_children</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Removes all the children of the tree.</p>\n<p>Parameter <code>tree</code>: The tree to remove all children from.  If this parameter is not a valid\nCFTree, the behavior is undefined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_children\" class=\"method\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#497-506\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"objc2_core_foundation/struct.CFTree.html#tymethod.sort_children\" class=\"fn\">sort_children</a>(\n    &amp;self,\n    comparator: <a class=\"type\" href=\"objc2_core_foundation/type.CFComparatorFunction.html\" title=\"type objc2_core_foundation::CFComparatorFunction\">CFComparatorFunction</a>,\n    context: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a>,\n)</h4></section></summary><div class=\"docblock\"><p>Sorts the children of the specified tree using the specified comparator function.</p>\n<p>Parameter <code>tree</code>: The tree to be operated on.  If this parameter is not a valid\nCFTree, the behavior is undefined.</p>\n<p>Parameter <code>comparator</code>: The function with the comparator function type\nsignature which is used in the sort operation to compare\nchildren of the tree with the given value. If this parameter\nis not a pointer to a function of the correct prototype, the\nthe behavior is undefined. The children of the tree are sorted\nfrom least to greatest according to this function.</p>\n<p>Parameter <code>context</code>: A pointer-sized user-defined value, which is passed\nas the third parameter to the comparator function, but is\notherwise unused by this function. If the context is not\nwhat is expected by the comparator function, the behavior is\nundefined.</p>\n<h5 id=\"safety-8\"><a class=\"doc-anchor\" href=\"#safety-8\">§</a>Safety</h5>\n<ul>\n<li><code>comparator</code> must be implemented correctly.</li>\n<li><code>context</code> must be a valid pointer.</li>\n</ul>\n</div></details></div></details>",0,"objc2_core_foundation::generated::__CFXMLNode::CFXMLTree"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConcreteType-for-CFTree\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#119-129\">Source</a><a href=\"#impl-ConcreteType-for-CFTree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"objc2_core_foundation/trait.ConcreteType.html\" title=\"trait objc2_core_foundation::ConcreteType\">ConcreteType</a> for <a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#123-128\">Source</a><a href=\"#method.type_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"objc2_core_foundation/trait.ConcreteType.html#tymethod.type_id\" class=\"fn\">type_id</a>() -&gt; <a class=\"type\" href=\"objc2_core_foundation/type.CFTypeID.html\" title=\"type objc2_core_foundation::CFTypeID\">CFTypeID</a></h4></section></summary><div class=\"docblock\"><p>Returns the type identifier of all CFTree instances.</p>\n</div></details></div></details>","ConcreteType","objc2_core_foundation::generated::__CFXMLNode::CFXMLTree"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-CFTree\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#111-113\">Source</a><a href=\"#impl-Debug-for-CFTree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#111-113\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","objc2_core_foundation::generated::__CFXMLNode::CFXMLTree"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-CFTree\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#111-113\">Source</a><a href=\"#impl-Deref-for-CFTree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#111-113\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = <a class=\"struct\" href=\"objc2_core_foundation/struct.CFType.html\" title=\"struct objc2_core_foundation::CFType\">CFType</a></h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#111-113\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","objc2_core_foundation::generated::__CFXMLNode::CFXMLTree"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-CFTree\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#111-113\">Source</a><a href=\"#impl-Hash-for-CFTree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#111-113\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","objc2_core_foundation::generated::__CFXMLNode::CFXMLTree"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Message-for-CFTree\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#115-117\">Source</a><a href=\"#impl-Message-for-CFTree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"objc2/top_level_traits/trait.Message.html\" title=\"trait objc2::top_level_traits::Message\">Message</a> for <a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/objc2/top_level_traits.rs.html#105-107\">Source</a><a href=\"#method.retain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"objc2/top_level_traits/trait.Message.html#method.retain\" class=\"fn\">retain</a>(&amp;self) -&gt; <a class=\"struct\" href=\"objc2/rc/retained/struct.Retained.html\" title=\"struct objc2::rc::retained::Retained\">Retained</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Increment the reference count of the receiver. <a href=\"objc2/top_level_traits/trait.Message.html#method.retain\">Read more</a></div></details></div></details>","Message","objc2_core_foundation::generated::__CFXMLNode::CFXMLTree"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-CFTree\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#111-113\">Source</a><a href=\"#impl-PartialEq-for-CFTree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#111-113\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","objc2_core_foundation::generated::__CFXMLNode::CFXMLTree"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RefEncode-for-CFTree\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#115-117\">Source</a><a href=\"#impl-RefEncode-for-CFTree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"objc2/encode/trait.RefEncode.html\" title=\"trait objc2::encode::RefEncode\">RefEncode</a> for <a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ENCODING_REF\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#115-117\">Source</a><a href=\"#associatedconstant.ENCODING_REF\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"objc2/encode/trait.RefEncode.html#associatedconstant.ENCODING_REF\" class=\"constant\">ENCODING_REF</a>: <a class=\"enum\" href=\"objc2_encode/encoding/enum.Encoding.html\" title=\"enum objc2_encode::encoding::Encoding\">Encoding</a></h4></section></summary><div class='docblock'>The Objective-C type-encoding for a reference of this type. <a href=\"objc2/encode/trait.RefEncode.html#associatedconstant.ENCODING_REF\">Read more</a></div></details></div></details>","RefEncode","objc2_core_foundation::generated::__CFXMLNode::CFXMLTree"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Type-for-CFTree\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#111-113\">Source</a><a href=\"#impl-Type-for-CFTree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"objc2_core_foundation/trait.Type.html\" title=\"trait objc2_core_foundation::Type\">Type</a> for <a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/type_traits.rs.html#33-41\">Source</a><a href=\"#method.retain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"objc2_core_foundation/trait.Type.html#method.retain\" class=\"fn\">retain</a>(&amp;self) -&gt; <a class=\"struct\" href=\"objc2_core_foundation/struct.CFRetained.html\" title=\"struct objc2_core_foundation::CFRetained\">CFRetained</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"CFRetained&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Increment the reference count of the receiver. <a href=\"objc2_core_foundation/trait.Type.html#method.retain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_concrete_TypeRef\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/type_traits.rs.html#47-49\">Source</a><a href=\"#method.as_concrete_TypeRef\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"objc2_core_foundation/trait.Type.html#method.as_concrete_TypeRef\" class=\"fn\">as_concrete_TypeRef</a>(&amp;self) -&gt; &amp;Self</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: this is redundant</span></div></span><div class='docblock'>Helper for easier transition from the <code>core-foundation</code> crate.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrap_under_get_rule\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/type_traits.rs.html#58-65\">Source</a><a href=\"#method.wrap_under_get_rule\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"objc2_core_foundation/trait.Type.html#method.wrap_under_get_rule\" class=\"fn\">wrap_under_get_rule</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>Self) -&gt; <a class=\"struct\" href=\"objc2_core_foundation/struct.CFRetained.html\" title=\"struct objc2_core_foundation::CFRetained\">CFRetained</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"CFRetained&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: use CFRetained::retain</span></div></span><div class='docblock'>Helper for easier transition from the <code>core-foundation</code> crate. <a href=\"objc2_core_foundation/trait.Type.html#method.wrap_under_get_rule\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_CFTypeRef\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/type_traits.rs.html#71-76\">Source</a><a href=\"#method.as_CFTypeRef\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"objc2_core_foundation/trait.Type.html#method.as_CFTypeRef\" class=\"fn\">as_CFTypeRef</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFType.html\" title=\"struct objc2_core_foundation::CFType\">CFType</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"objc2_core_foundation/struct.CFType.html\" title=\"struct objc2_core_foundation::CFType\">CFType</a>&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: this is redundant (CF types deref to CFType)</span></div></span><div class='docblock'>Helper for easier transition from the <code>core-foundation</code> crate.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrap_under_create_rule\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/type_traits.rs.html#85-92\">Source</a><a href=\"#method.wrap_under_create_rule\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"objc2_core_foundation/trait.Type.html#method.wrap_under_create_rule\" class=\"fn\">wrap_under_create_rule</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>Self) -&gt; <a class=\"struct\" href=\"objc2_core_foundation/struct.CFRetained.html\" title=\"struct objc2_core_foundation::CFRetained\">CFRetained</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"CFRetained&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: use CFRetained::from_raw</span></div></span><div class='docblock'>Helper for easier transition from the <code>core-foundation</code> crate. <a href=\"objc2_core_foundation/trait.Type.html#method.wrap_under_create_rule\">Read more</a></div></details></div></details>","Type","objc2_core_foundation::generated::__CFXMLNode::CFXMLTree"],["<section id=\"impl-Eq-for-CFTree\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2_core_foundation/generated/CFTree.rs.html#111-113\">Source</a><a href=\"#impl-Eq-for-CFTree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"objc2_core_foundation/struct.CFTree.html\" title=\"struct objc2_core_foundation::CFTree\">CFTree</a></h3></section>","Eq","objc2_core_foundation::generated::__CFXMLNode::CFXMLTree"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[51704]}